wta.basic.1$grass_p[loser.idx]
res.wta.basic.3.sf[i] <- wta.basic.3$grass_p[winner.idx] >
wta.basic.3$grass_p[loser.idx]
} else if (surf=="Hard"){
res.wta.basic.1.sf[i] <- wta.basic.1$hard_p[winner.idx] >
wta.basic.1$hard_p[loser.idx]
res.wta.basic.3.sf[i] <- wta.basic.3$hard_p[winner.idx] >
wta.basic.3$hard_p[loser.idx]
} else if (surf=="Clay"){
res.wta.basic.1.sf[i] <- wta.basic.1$clay_p[winner.idx] >
wta.basic.1$clay_p[loser.idx]
res.wta.basic.3.sf[i] <- wta.basic.3$clay_p[winner.idx] >
wta.basic.3$clay_p[loser.idx]
}
}
mean(res.wta.basic.1)
mean(res.wta.basic.1.sf)
mean(res.wta.basic.3)
mean(res.wta.basic.3.sf)
n <- nrow(atp.test)
res.atp.oaf.1 <- rep(0,n)
res.atp.oaf.3 <- rep(0,n)
res.atp.oaf.1.sf <- rep(0,n)
res.atp.oaf.3.sf <- rep(0,n)
for (i in 1:n){
winner <- atp.test$winner_id[i]
loser <- atp.test$loser_id[i]
# same ids for 1/3 year(s) data sets
winner.idx <- which(atp.basic.1$player_id==winner)
loser.idx <- which(atp.basic.1$player_id==loser)
winner.adj.p <- atp.basic.1$p.estimate[winner.idx]-
(atp.basic.1$q.estimate[loser.idx]-q.bar.atp.1)
loser.adj.p <- atp.basic.3$p.estimate[loser.idx]-
(atp.basic.1$q.estimate[winner.idx]-q.bar.atp.1)
res.atp.oaf.1[i] <- winner.adj.p > loser.adj.p
winner.adj.p <- atp.basic.3$p.estimate[winner.idx]-
(atp.basic.3$q.estimate[loser.idx]-q.bar.atp.3)
loser.adj.p <- atp.basic.3$p.estimate[loser.idx]-
(atp.basic.3$q.estimate[winner.idx]-q.bar.atp.3)
res.atp.oaf.3[i] <- winner.adj.p > loser.adj.p
if (surf=="Grass") {
winner.adj.p <- atp.basic.1$grass_p[winner.idx] -
(atp.basic.1$grass_q[loser.idx] - q.bar.grass.atp.1)
loser.adj.p <- atp.basic.1$grass_p[loser.idx] -
(atp.basic.1$grass_q[winner.idx] - q.bar.grass.atp.1)
res.atp.oaf.1.sf[i] <- winner.adj.p > loser.adj.p
winner.adj.p <- atp.basic.3$grass_p[winner.idx] -
(atp.basic.3$grass_q[loser.idx] - q.bar.grass.atp.3)
loser.adj.p <- atp.basic.3$grass_p[loser.idx] -
(atp.basic.3$grass_q[winner.idx] - q.bar.grass.atp.3)
res.atp.oaf.3.sf[i] <- winner.adj.p > loser.adj.p
} else if (surf=="Hard"){
winner.adj.p <- atp.basic.1$hard_p[winner.idx] -
(atp.basic.1$hard_q[loser.idx] - q.bar.hard.atp.1)
loser.adj.p <- atp.basic.1$hard_p[loser.idx] -
(atp.basic.1$hard_q[winner.idx] - q.bar.hard.atp.1)
res.atp.oaf.1.sf[i] <- winner.adj.p > loser.adj.p
winner.adj.p <- atp.basic.3$hard_p[winner.idx] -
(atp.basic.3$hard_q[loser.idx] - q.bar.hard.atp.3)
loser.adj.p <- atp.basic.3$hard_p[loser.idx] -
(atp.basic.3$hard_q[winner.idx] - q.bar.hard.atp.3)
res.atp.oaf.3.sf[i] <- winner.adj.p > loser.adj.p
} else if (surf=="Clay"){
winner.adj.p <- atp.basic.1$clay_p[winner.idx] -
(atp.basic.1$clay_q[loser.idx] - q.bar.clay.atp.1)
loser.adj.p <- atp.basic.1$clay_p[loser.idx] -
(atp.basic.1$clay_q[winner.idx] - q.bar.clay.atp.1)
res.atp.oaf.1.sf[i] <- winner.adj.p > loser.adj.p
winner.adj.p <- atp.basic.3$clay_p[winner.idx] -
(atp.basic.3$clay_q[loser.idx] - q.bar.clay.atp.3)
loser.adj.p <- atp.basic.3$clay_p[loser.idx] -
(atp.basic.3$clay_q[winner.idx] - q.bar.clay.atp.3)
res.atp.oaf.3.sf[i] <- winner.adj.p > loser.adj.p
}
}
mean(res.atp.oaf.1)
mean(res.atp.oaf.1.sf)
mean(res.atp.oaf.3)
mean(res.atp.oaf.3.sf)
n <- nrow(wta.test)
res.wta.oaf.1 <- rep(0,n)
res.wta.oaf.3 <- rep(0,n)
res.wta.oaf.1.sf <- rep(0,n)
res.wta.oaf.3.sf <- rep(0,n)
for (i in 1:n){
winner <- wta.test$winner_id[i]
loser <- wta.test$loser_id[i]
# same ids for 1/3 year(s) data sets
winner.idx <- which(wta.basic.1$player_id==winner)
loser.idx <- which(wta.basic.1$player_id==loser)
winner.adj.p <- wta.basic.1$p.estimate[winner.idx]-
(wta.basic.1$q.estimate[loser.idx]-q.bar.wta.1)
loser.adj.p <- wta.basic.3$p.estimate[loser.idx]-
(wta.basic.1$q.estimate[winner.idx]-q.bar.wta.1)
res.wta.oaf.1[i] <- winner.adj.p > loser.adj.p
winner.adj.p <- wta.basic.3$p.estimate[winner.idx]-
(wta.basic.3$q.estimate[loser.idx]-q.bar.wta.3)
loser.adj.p <- wta.basic.3$p.estimate[loser.idx]-
(wta.basic.3$q.estimate[winner.idx]-q.bar.wta.3)
res.wta.oaf.3[i] <- winner.adj.p > loser.adj.p
if (surf=="Grass") {
winner.adj.p <- wta.basic.1$grass_p[winner.idx] -
(wta.basic.1$grass_q[loser.idx] - q.bar.grass.wta.1)
loser.adj.p <- wta.basic.1$grass_p[loser.idx] -
(wta.basic.1$grass_q[winner.idx] - q.bar.grass.wta.1)
res.wta.oaf.1.sf[i] <- winner.adj.p > loser.adj.p
winner.adj.p <- wta.basic.3$grass_p[winner.idx] -
(wta.basic.3$grass_q[loser.idx] - q.bar.grass.wta.3)
loser.adj.p <- wta.basic.3$grass_p[loser.idx] -
(wta.basic.3$grass_q[winner.idx] - q.bar.grass.wta.3)
res.wta.oaf.3.sf[i] <- winner.adj.p > loser.adj.p
} else if (surf=="Hard"){
winner.adj.p <- wta.basic.1$hard_p[winner.idx] -
(wta.basic.1$hard_q[loser.idx] - q.bar.hard.wta.1)
loser.adj.p <- wta.basic.1$hard_p[loser.idx] -
(wta.basic.1$hard_q[winner.idx] - q.bar.hard.wta.1)
res.wta.oaf.1.sf[i] <- winner.adj.p > loser.adj.p
winner.adj.p <- wta.basic.3$hard_p[winner.idx] -
(wta.basic.3$hard_q[loser.idx] - q.bar.hard.wta.3)
loser.adj.p <- wta.basic.3$hard_p[loser.idx] -
(wta.basic.3$hard_q[winner.idx] - q.bar.hard.wta.3)
res.wta.oaf.3.sf[i] <- winner.adj.p > loser.adj.p
} else if (surf=="Clay"){
winner.adj.p <- wta.basic.1$clay_p[winner.idx] -
(wta.basic.1$clay_q[loser.idx] - q.bar.clay.wta.1)
loser.adj.p <- wta.basic.1$clay_p[loser.idx] -
(wta.basic.1$clay_q[winner.idx] - q.bar.clay.wta.1)
res.wta.oaf.1.sf[i] <- winner.adj.p > loser.adj.p
winner.adj.p <- wta.basic.3$clay_p[winner.idx] -
(wta.basic.3$clay_q[loser.idx] - q.bar.clay.wta.3)
loser.adj.p <- wta.basic.3$clay_p[loser.idx] -
(wta.basic.3$clay_q[winner.idx] - q.bar.clay.wta.3)
res.wta.oaf.3.sf[i] <- winner.adj.p > loser.adj.p
}
}
mean(res.wta.oaf.1)
mean(res.wta.oaf.1.sf)
mean(res.wta.oaf.3)
mean(res.wta.oaf.3.sf)
atp.co.1$w_total_pts_served <- atp.co.1$grass_pts_served1 +
atp.co.1$hard_pts_served1 + atp.co.1$clay_pts_served1
atp.co.1$w_total_service_pts_won <- atp.co.1$grass_service_pts_won1 +
atp.co.1$hard_service_pts_won1 + atp.co.1$clay_service_pts_won1
atp.co.1$w_p <- atp.co.1$w_total_service_pts_won/atp.co.1$w_total_pts_served
atp.co.1$l_total_pts_served <- atp.co.1$grass_pts_served2 +
atp.co.1$hard_pts_served2 + atp.co.1$clay_pts_served2
atp.co.1$l_total_service_pts_won <- atp.co.1$grass_service_pts_won2 +
atp.co.1$hard_service_pts_won2 + atp.co.1$clay_service_pts_won2
atp.co.1$l_p <- atp.co.1$l_total_service_pts_won/atp.co.1$l_total_pts_served
atp.co.1$w_g_co <- atp.co.1$grass_service_pts_won1/atp.co.1$grass_pts_served1
atp.co.1$w_h_co <- atp.co.1$hard_service_pts_won1/atp.co.1$hard_pts_served1
atp.co.1$w_c_co <- atp.co.1$clay_service_pts_won1/atp.co.1$clay_pts_served1
atp.co.1$l_g_co <- atp.co.1$grass_service_pts_won2/atp.co.1$grass_pts_served2
atp.co.1$l_h_co <- atp.co.1$hard_service_pts_won2/atp.co.1$hard_pts_served2
atp.co.1$l_c_co <- atp.co.1$clay_service_pts_won2/atp.co.1$clay_pts_served2
# first see accuracy for entries where co data is available
co.valid <- which(!is.na(atp.co.1$w_p) & !is.na(atp.co.1$l_p))
res.atp.co.1 <- rep(0,length(co.valid))
for (i in 1:length(co.valid)){
res.atp.co.1[i] <- atp.co.1$w_p[co.valid[i]] > atp.co.1$l_p[co.valid[i]]
}
# surface filtered version not as straightforward to find valid
res.atp.co.1.sf <- c()
for (i in 1:nrow(atp.test)){
if (atp.test$surface[i]=="Grass" &
!is.na(atp.co.1$w_g_co[i]) & !is.na(atp.co.1$l_g_co[i])){
res.atp.co.1.sf <- c(res.atp.co.1.sf, atp.co.1$w_g_co[i] > atp.co.1$l_g_co[i])
} else if (atp.test$surface[i]=="Hard" &
!is.na(atp.co.1$w_h_co[i]) & !is.na(atp.co.1$l_h_co[i])){
res.atp.co.1.sf <- c(res.atp.co.1.sf, atp.co.1$w_h_co[i] > atp.co.1$l_h_co[i])
} else if (atp.test$surface[i]=="Clay" &
!is.na(atp.co.1$w_c_co[i]) & !is.na(atp.co.1$l_c_co[i])){
res.atp.co.1.sf <- c(res.atp.co.1.sf, atp.co.1$w_c_co[i] > atp.co.1$l_c_co[i])
}
}
atp.co.3$w_total_pts_served <- atp.co.3$grass_pts_served1 +
atp.co.3$hard_pts_served1 + atp.co.3$clay_pts_served1
atp.co.3$w_total_service_pts_won <- atp.co.3$grass_service_pts_won1 +
atp.co.3$hard_service_pts_won1 + atp.co.3$clay_service_pts_won1
atp.co.3$w_p <- atp.co.3$w_total_service_pts_won/atp.co.3$w_total_pts_served
atp.co.3$l_total_pts_served <- atp.co.3$grass_pts_served2 +
atp.co.3$hard_pts_served2 + atp.co.3$clay_pts_served2
atp.co.3$l_total_service_pts_won <- atp.co.3$grass_service_pts_won2 +
atp.co.3$hard_service_pts_won2 + atp.co.3$clay_service_pts_won2
atp.co.3$l_p <- atp.co.3$l_total_service_pts_won/atp.co.3$l_total_pts_served
atp.co.3$w_g_co <- atp.co.3$grass_service_pts_won1/atp.co.3$grass_pts_served1
atp.co.3$w_h_co <- atp.co.3$hard_service_pts_won1/atp.co.3$hard_pts_served1
atp.co.3$w_c_co <- atp.co.3$clay_service_pts_won1/atp.co.3$clay_pts_served1
atp.co.3$l_g_co <- atp.co.3$grass_service_pts_won2/atp.co.3$grass_pts_served2
atp.co.3$l_h_co <- atp.co.3$hard_service_pts_won2/atp.co.3$hard_pts_served2
atp.co.3$l_c_co <- atp.co.3$clay_service_pts_won2/atp.co.3$clay_pts_served2
# first see accuracy for entries where co data is available
co.valid <- which(!is.na(atp.co.3$w_p) & !is.na(atp.co.3$l_p))
res.atp.co.3 <- rep(0,length(co.valid))
for (i in 1:length(co.valid)){
res.atp.co.3[i] <- atp.co.3$w_p[co.valid[i]] > atp.co.3$l_p[co.valid[i]]
}
# surface filtered version not as straightforward to find valid
res.atp.co.3.sf <- c()
for (i in 1:nrow(atp.test)){
if (atp.test$surface[i]=="Grass" &
!is.na(atp.co.3$w_g_co[i]) & !is.na(atp.co.3$l_g_co[i])){
res.atp.co.3.sf <- c(res.atp.co.3.sf, atp.co.3$w_g_co[i] > atp.co.3$l_g_co[i])
} else if (atp.test$surface[i]=="Hard" &
!is.na(atp.co.3$w_h_co[i]) & !is.na(atp.co.3$l_h_co[i])){
res.atp.co.3.sf <- c(res.atp.co.3.sf, atp.co.3$w_h_co[i] > atp.co.3$l_h_co[i])
} else if (atp.test$surface[i]=="Clay" &
!is.na(atp.co.3$w_c_co[i]) & !is.na(atp.co.3$l_c_co[i])){
res.atp.co.3.sf <- c(res.atp.co.3.sf, atp.co.3$w_c_co[i] > atp.co.3$l_c_co[i])
}
}
wta.co.1$w_total_pts_served <- wta.co.1$grass_pts_served1 +
wta.co.1$hard_pts_served1 + wta.co.1$clay_pts_served1
wta.co.1$w_total_service_pts_won <- wta.co.1$grass_service_pts_won1 +
wta.co.1$hard_service_pts_won1 + wta.co.1$clay_service_pts_won1
wta.co.1$w_p <- wta.co.1$w_total_service_pts_won/wta.co.1$w_total_pts_served
wta.co.1$l_total_pts_served <- wta.co.1$grass_pts_served2 +
wta.co.1$hard_pts_served2 + wta.co.1$clay_pts_served2
wta.co.1$l_total_service_pts_won <- wta.co.1$grass_service_pts_won2 +
wta.co.1$hard_service_pts_won2 + wta.co.1$clay_service_pts_won2
wta.co.1$l_p <- wta.co.1$l_total_service_pts_won/wta.co.1$l_total_pts_served
wta.co.1$w_g_co <- wta.co.1$grass_service_pts_won1/wta.co.1$grass_pts_served1
wta.co.1$w_h_co <- wta.co.1$hard_service_pts_won1/wta.co.1$hard_pts_served1
wta.co.1$w_c_co <- wta.co.1$clay_service_pts_won1/wta.co.1$clay_pts_served1
wta.co.1$l_g_co <- wta.co.1$grass_service_pts_won2/wta.co.1$grass_pts_served2
wta.co.1$l_h_co <- wta.co.1$hard_service_pts_won2/wta.co.1$hard_pts_served2
wta.co.1$l_c_co <- wta.co.1$clay_service_pts_won2/wta.co.1$clay_pts_served2
# first see accuracy for entries where co data is available
co.valid <- which(!is.na(wta.co.1$w_p) & !is.na(wta.co.1$l_p))
res.wta.co.1 <- rep(0,length(co.valid))
for (i in 1:length(co.valid)){
res.wta.co.1[i] <- wta.co.1$w_p[co.valid[i]] > wta.co.1$l_p[co.valid[i]]
}
# surface filtered version not as straightforward to find valid
res.wta.co.1.sf <- c()
for (i in 1:nrow(wta.test)){
if (wta.test$surface[i]=="Grass" &
!is.na(wta.co.1$w_g_co[i]) & !is.na(wta.co.1$l_g_co[i])){
res.wta.co.1.sf <- c(res.wta.co.1.sf, wta.co.1$w_g_co[i] > wta.co.1$l_g_co[i])
} else if (wta.test$surface[i]=="Hard" &
!is.na(wta.co.1$w_h_co[i]) & !is.na(wta.co.1$l_h_co[i])){
res.wta.co.1.sf <- c(res.wta.co.1.sf, wta.co.1$w_h_co[i] > wta.co.1$l_h_co[i])
} else if (wta.test$surface[i]=="Clay" &
!is.na(wta.co.1$w_c_co[i]) & !is.na(wta.co.1$l_c_co[i])){
res.wta.co.1.sf <- c(res.wta.co.1.sf, wta.co.1$w_c_co[i] > wta.co.1$l_c_co[i])
}
}
wta.co.3$w_total_pts_served <- wta.co.3$grass_pts_served1 +
wta.co.3$hard_pts_served1 + wta.co.3$clay_pts_served1
wta.co.3$w_total_service_pts_won <- wta.co.3$grass_service_pts_won1 +
wta.co.3$hard_service_pts_won1 + wta.co.3$clay_service_pts_won1
wta.co.3$w_p <- wta.co.3$w_total_service_pts_won/wta.co.3$w_total_pts_served
wta.co.3$l_total_pts_served <- wta.co.3$grass_pts_served2 +
wta.co.3$hard_pts_served2 + wta.co.3$clay_pts_served2
wta.co.3$l_total_service_pts_won <- wta.co.3$grass_service_pts_won2 +
wta.co.3$hard_service_pts_won2 + wta.co.3$clay_service_pts_won2
wta.co.3$l_p <- wta.co.3$l_total_service_pts_won/wta.co.3$l_total_pts_served
wta.co.3$w_g_co <- wta.co.3$grass_service_pts_won1/wta.co.3$grass_pts_served1
wta.co.3$w_h_co <- wta.co.3$hard_service_pts_won1/wta.co.3$hard_pts_served1
wta.co.3$w_c_co <- wta.co.3$clay_service_pts_won1/wta.co.3$clay_pts_served1
wta.co.3$l_g_co <- wta.co.3$grass_service_pts_won2/wta.co.3$grass_pts_served2
wta.co.3$l_h_co <- wta.co.3$hard_service_pts_won2/wta.co.3$hard_pts_served2
wta.co.3$l_c_co <- wta.co.3$clay_service_pts_won2/wta.co.3$clay_pts_served2
# first see accuracy for entries where co data is available
co.valid <- which(!is.na(wta.co.3$w_p) & !is.na(wta.co.3$l_p))
res.wta.co.3 <- rep(0,length(co.valid))
for (i in 1:length(co.valid)){
res.wta.co.3[i] <- wta.co.3$w_p[co.valid[i]] > wta.co.3$l_p[co.valid[i]]
}
# surface filtered version not as straightforward to find valid
res.wta.co.3.sf <- c()
for (i in 1:nrow(wta.test)){
if (wta.test$surface[i]=="Grass" &
!is.na(wta.co.3$w_g_co[i]) & !is.na(wta.co.3$l_g_co[i])){
res.wta.co.3.sf <- c(res.wta.co.3.sf, wta.co.3$w_g_co[i] > wta.co.3$l_g_co[i])
} else if (wta.test$surface[i]=="Hard" &
!is.na(wta.co.3$w_h_co[i]) & !is.na(wta.co.3$l_h_co[i])){
res.wta.co.3.sf <- c(res.wta.co.3.sf, wta.co.3$w_h_co[i] > wta.co.3$l_h_co[i])
} else if (wta.test$surface[i]=="Clay" &
!is.na(wta.co.3$w_c_co[i]) & !is.na(wta.co.3$l_c_co[i])){
res.wta.co.3.sf <- c(res.wta.co.3.sf, wta.co.3$w_c_co[i] > wta.co.3$l_c_co[i])
}
}
mean(res.atp.co.1)
mean(res.atp.co.1.sf)
mean(res.atp.co.3)
mean(res.atp.co.3.sf)
mean(res.wta.co.1)
mean(res.wta.co.1.sf)
mean(res.wta.co.3)
mean(res.wta.co.3.sf)
length(res.atp.co.1)
length(res.atp.co.1.sf)
length(res.atp.co.3)
length(res.atp.co.3.sf)
length(res.wta.co.1)
length(res.wta.co.1.sf)
length(res.wta.co.3)
length(res.wta.co.3.sf)
atp.co.1$w_p_2nsf <- atp.co.1$co2nsf_service_pts_won1/atp.co.1$co2nsf_pts_served1
atp.co.1$l_p_2nsf <- atp.co.1$co2nsf_service_pts_won2/atp.co.1$co2nsf_pts_served2
# first see accuracy for entries where co data is available
co.valid <- which(!is.na(atp.co.1$w_p_2nsf) & !is.na(atp.co.1$l_p_2nsf))
res.atp.co2.1 <- rep(0,length(co.valid))
for (i in 1:length(co.valid)){
res.atp.co2.1[i] <- atp.co.1$w_p_2nsf[co.valid[i]] > atp.co.1$l_p_2nsf[co.valid[i]]
}
atp.co.1$w_p_2 <- atp.co.1$co2_service_pts_won1/atp.co.1$co2_pts_served1
atp.co.1$l_p_2 <- atp.co.1$co2_service_pts_won2/atp.co.1$co2_pts_served2
# first see accuracy for entries where co data is available
co.valid <- which(!is.na(atp.co.1$w_p_2) & !is.na(atp.co.1$l_p_2))
res.atp.co2.1.sf <- rep(0,length(co.valid))
for (i in 1:length(co.valid)){
res.atp.co2.1.sf[i] <- atp.co.1$w_p_2[co.valid[i]] > atp.co.1$l_p_2[co.valid[i]]
}
atp.co.3$w_p_2nsf <- atp.co.3$co2nsf_service_pts_won1/atp.co.3$co2nsf_pts_served1
atp.co.3$l_p_2nsf <- atp.co.3$co2nsf_service_pts_won2/atp.co.3$co2nsf_pts_served2
# first see accuracy for entries where co data is available
co.valid <- which(!is.na(atp.co.3$w_p_2nsf) & !is.na(atp.co.3$l_p_2nsf))
res.atp.co2.3 <- rep(0,length(co.valid))
for (i in 1:length(co.valid)){
res.atp.co2.3[i] <- atp.co.3$w_p_2nsf[co.valid[i]] > atp.co.3$l_p_2nsf[co.valid[i]]
}
atp.co.3$w_p_2 <- atp.co.3$co2_service_pts_won1/atp.co.3$co2_pts_served1
atp.co.3$l_p_2 <- atp.co.3$co2_service_pts_won2/atp.co.3$co2_pts_served2
# first see accuracy for entries where co data is available
co.valid <- which(!is.na(atp.co.3$w_p_2) & !is.na(atp.co.3$l_p_2))
res.atp.co2.3.sf <- rep(0,length(co.valid))
for (i in 1:length(co.valid)){
res.atp.co2.3.sf[i] <- atp.co.3$w_p_2[co.valid[i]] > atp.co.3$l_p_2[co.valid[i]]
}
wta.co.1$w_p_2nsf <- wta.co.1$co2nsf_service_pts_won1/wta.co.1$co2nsf_pts_served1
wta.co.1$l_p_2nsf <- wta.co.1$co2nsf_service_pts_won2/wta.co.1$co2nsf_pts_served2
# first see accuracy for entries where co data is available
co.valid <- which(!is.na(wta.co.1$w_p_2nsf) & !is.na(wta.co.1$l_p_2nsf))
res.wta.co2.1 <- rep(0,length(co.valid))
for (i in 1:length(co.valid)){
res.wta.co2.1[i] <- wta.co.1$w_p_2nsf[co.valid[i]] > wta.co.1$l_p_2nsf[co.valid[i]]
}
wta.co.1$w_p_2 <- wta.co.1$co2_service_pts_won1/wta.co.1$co2_pts_served1
wta.co.1$l_p_2 <- wta.co.1$co2_service_pts_won2/wta.co.1$co2_pts_served2
# first see accuracy for entries where co data is available
co.valid <- which(!is.na(wta.co.1$w_p_2) & !is.na(wta.co.1$l_p_2))
res.wta.co2.1.sf <- rep(0,length(co.valid))
for (i in 1:length(co.valid)){
res.wta.co2.1.sf[i] <- wta.co.1$w_p_2[co.valid[i]] > wta.co.1$l_p_2[co.valid[i]]
}
wta.co.3$w_p_2nsf <- wta.co.3$co2nsf_service_pts_won1/wta.co.3$co2nsf_pts_served1
wta.co.3$l_p_2nsf <- wta.co.3$co2nsf_service_pts_won2/wta.co.3$co2nsf_pts_served2
# first see accuracy for entries where co data is available
co.valid <- which(!is.na(wta.co.3$w_p_2nsf) & !is.na(wta.co.3$l_p_2nsf))
res.wta.co2.3 <- rep(0,length(co.valid))
for (i in 1:length(co.valid)){
res.wta.co2.3[i] <- wta.co.3$w_p_2nsf[co.valid[i]] > wta.co.3$l_p_2nsf[co.valid[i]]
}
wta.co.3$w_p_2 <- wta.co.3$co2_service_pts_won1/wta.co.3$co2_pts_served1
wta.co.3$l_p_2 <- wta.co.3$co2_service_pts_won2/wta.co.3$co2_pts_served2
# first see accuracy for entries where co data is available
co.valid <- which(!is.na(wta.co.3$w_p_2) & !is.na(wta.co.3$l_p_2))
res.wta.co2.3.sf <- rep(0,length(co.valid))
for (i in 1:length(co.valid)){
res.wta.co2.3.sf[i] <- wta.co.3$w_p_2[co.valid[i]] > wta.co.3$l_p_2[co.valid[i]]
}
mean(res.atp.co2.1)
mean(res.atp.co2.1.sf)
mean(res.atp.co2.3)
mean(res.atp.co2.3.sf)
mean(res.wta.co2.1)
mean(res.wta.co2.1.sf)
mean(res.wta.co2.3)
mean(res.wta.co2.3.sf)
length(res.atp.co2.1)
length(res.atp.co2.1.sf)
length(res.atp.co2.3)
length(res.atp.co2.3.sf)
length(res.wta.co2.1)
length(res.wta.co2.1.sf)
length(res.wta.co2.3)
length(res.wta.co2.3.sf)
prop.test(c(sum(res.atp.basic.1),sum(res.atp.basic.3)),
c(length(res.atp.basic.1),length(res.atp.basic.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.basic.1.sf),sum(res.atp.basic.3.sf)),
c(length(res.atp.basic.1.sf),length(res.atp.basic.3.sf)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.oaf.1),sum(res.atp.oaf.3)),
c(length(res.atp.oaf.1),length(res.atp.oaf.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.oaf.1.sf),sum(res.atp.oaf.3.sf)),
c(length(res.atp.oaf.1.sf),length(res.atp.oaf.3.sf)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.co.1),sum(res.atp.co.3)),
c(length(res.atp.co.1),length(res.atp.co.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.co.1.sf),sum(res.atp.co.3.sf)),
c(length(res.atp.co.1.sf),length(res.atp.co.3.sf)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.co2.1),sum(res.atp.co2.3)),
c(length(res.atp.co2.1),length(res.atp.co2.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.co2.1.sf),sum(res.atp.co2.3.sf)),
c(length(res.atp.co2.1.sf),length(res.atp.co2.3.sf)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.basic.1),sum(res.wta.basic.3)),
c(length(res.wta.basic.1),length(res.wta.basic.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.basic.1.sf),sum(res.wta.basic.3.sf)),
c(length(res.wta.basic.1.sf),length(res.wta.basic.3.sf)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.oaf.1),sum(res.wta.oaf.3)),
c(length(res.wta.oaf.1),length(res.wta.oaf.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.oaf.1.sf),sum(res.wta.oaf.3.sf)),
c(length(res.wta.oaf.1.sf),length(res.wta.oaf.3.sf)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.co.1),sum(res.wta.co.3)),
c(length(res.wta.co.1),length(res.wta.co.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.co.1.sf),sum(res.wta.co.3.sf)),
c(length(res.wta.co.1.sf),length(res.wta.co.3.sf)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.co2.1),sum(res.wta.co2.3)),
c(length(res.wta.co2.1),length(res.wta.co2.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.co2.1.sf),sum(res.wta.co2.3.sf)),
c(length(res.wta.co2.1.sf),length(res.wta.co2.3.sf)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.basic.1.sf),sum(res.atp.basic.1)),
c(length(res.atp.basic.1.sf),length(res.atp.basic.1)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.basic.3.sf),sum(res.atp.basic.3)),
c(length(res.atp.basic.3.sf),length(res.atp.basic.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.oaf.1.sf),sum(res.atp.oaf.1)),
c(length(res.atp.oaf.1.sf),length(res.atp.oaf.1)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.oaf.3.sf),sum(res.atp.oaf.3)),
c(length(res.atp.oaf.3.sf),length(res.atp.oaf.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.co.1.sf),sum(res.atp.co.1)),
c(length(res.atp.co.1.sf),length(res.atp.co.1)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.co.3.sf),sum(res.atp.co.3)),
c(length(res.atp.co.3.sf),length(res.atp.co.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.co2.1.sf),sum(res.atp.co2.1)),
c(length(res.atp.co2.1.sf),length(res.atp.co2.1)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.co2.3.sf),sum(res.atp.co2.3)),
c(length(res.atp.co2.3.sf),length(res.atp.co2.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.basic.1.sf),sum(res.wta.basic.1)),
c(length(res.wta.basic.1.sf),length(res.wta.basic.1)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.basic.3.sf),sum(res.wta.basic.3)),
c(length(res.wta.basic.3.sf),length(res.wta.basic.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.oaf.1.sf),sum(res.wta.oaf.1)),
c(length(res.wta.oaf.1.sf),length(res.wta.oaf.1)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.oaf.3.sf),sum(res.wta.oaf.3)),
c(length(res.wta.oaf.3.sf),length(res.wta.oaf.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.co.1.sf),sum(res.wta.co.1)),
c(length(res.wta.co.1.sf),length(res.wta.co.1)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.co.3.sf),sum(res.wta.co.3)),
c(length(res.wta.co.3.sf),length(res.wta.co.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.co2.1.sf),sum(res.wta.co2.1)),
c(length(res.wta.co2.1.sf),length(res.wta.co2.1)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.co2.3.sf),sum(res.wta.co2.3)),
c(length(res.wta.co2.3.sf),length(res.wta.co2.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.co.1.sf),sum(res.atp.co.1)),
c(length(res.atp.co.1.sf),length(res.atp.co.1)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.co2.1),sum(res.atp.co.1)),
c(length(res.atp.co2.1),length(res.atp.co.1)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.co2.1.sf),sum(res.atp.co.1)),
c(length(res.atp.co2.1.sf),length(res.atp.co.1)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.co.3.sf),sum(res.atp.co.3)),
c(length(res.atp.co.3.sf),length(res.atp.co.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.co2.3),sum(res.atp.co.3)),
c(length(res.atp.co2.3),length(res.atp.co.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.atp.co2.3.sf),sum(res.atp.co.3)),
c(length(res.atp.co2.3.sf),length(res.atp.co.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.co.1.sf),sum(res.wta.co.1)),
c(length(res.wta.co.1.sf),length(res.wta.co.1)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.co2.1),sum(res.wta.co.1)),
c(length(res.wta.co2.1),length(res.wta.co.1)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.co2.1.sf),sum(res.wta.co.1)),
c(length(res.wta.co2.1.sf),length(res.wta.co.1)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.co.3.sf),sum(res.wta.co.3)),
c(length(res.wta.co.3.sf),length(res.wta.co.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.co2.3),sum(res.wta.co.3)),
c(length(res.wta.co2.3),length(res.wta.co.3)),
alternative="less",correct=FALSE)$p.value
prop.test(c(sum(res.wta.co2.3.sf),sum(res.wta.co.3)),
c(length(res.wta.co2.3.sf),length(res.wta.co.3)),
alternative="less",correct=FALSE)$p.value
35/48
