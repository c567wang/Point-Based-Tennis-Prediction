wta22.basic <- wta22.basic[ind.wta22]
wta22.oaf <- wta22.oaf[ind.wta22]
wta22.h2h <- wta22.h2h[ind.wta22]
wta22.co <- wta22.co[ind.wta22]
wta22.cooaf <- wta22.cooaf[ind.wta22]
atp22.basic <- readRDS("../Results/Individual/t_atp22_basic")
atp22.oaf <- readRDS("../Results/Individual/t_atp22_oaf")
atp22.h2h <- readRDS("../Results/Individual/t_atp22_h2h")
atp22.co <- readRDS("../Results/Individual/t_atp22_co")
atp22.cooaf <- readRDS("../Results/Individual/t_atp22_co(oaf)")
atp22.basic <- atp22.basic[ind.atp22]
atp22.oaf <- atp22.oaf[ind.atp22]
atp22.h2h <- atp22.h2h[ind.atp22]
atp22.co <- atp22.co[ind.atp22]
atp22.cooaf <- atp22.cooaf[ind.atp22]
atp14.psu <- readRDS("../Results/Individual/t_atp14_psu_accuracy")
atp14.psu <- atp14.psu[ind.atp14]
wta18.psu <- readRDS("../Results/Individual/t_wta18_psu_accuracy")
wta18.psu <- wta18.psu[ind.wta18]
atp18.psu <- readRDS("../Results/Individual/t_atp18_psu_accuracy")
atp18.psu <- atp18.psu[ind.atp18]
wta22.psu <- readRDS("../Results/Individual/t_wta22_psu_accuracy")
wta22.psu <- wta22.psu[ind.wta22]
atp22.psu <- readRDS("../Results/Individual/t_atp22_psu_accuracy")
atp22.psu <- atp22.psu[ind.atp22]
atp14.psd <- readRDS("../Results/Individual/t_atp14_psd_accuracy")
atp14.psd <- atp14.psd[ind.atp14]
wta18.psd <- readRDS("../Results/Individual/t_wta18_psd_accuracy")
wta18.psd <- wta18.psd[ind.wta18]
atp18.psd <- readRDS("../Results/Individual/t_atp18_psd_accuracy")
atp18.psd <- atp18.psd[ind.atp18]
wta22.psd <- readRDS("../Results/Individual/t_wta22_psd_accuracy")
wta22.psd <- wta22.psd[ind.wta22]
atp22.psd <- readRDS("../Results/Individual/t_atp22_psd_accuracy")
atp22.psd <- atp22.psd[ind.atp22]
# column order of df's must be in order of tags below
tag <- c("H2H","CO","OAF","CO(OAF)","PSU","PSD")
atp14.df <- data.frame(cbind(atp14.h2h,atp14.co,atp14.oaf,
atp14.cooaf,atp14.psu,atp14.psd))
colnames(atp14.df) <- tag
atp18.df <- data.frame(cbind(atp18.h2h,atp18.co,atp18.oaf,
atp18.cooaf,atp18.psu,atp18.psd))
colnames(atp18.df) <- tag
wta18.df <- data.frame(cbind(wta18.h2h,wta18.co,wta18.oaf,
wta18.cooaf,wta18.psu,wta18.psd))
colnames(wta18.df) <- tag
atp22.df <- data.frame(cbind(atp22.h2h,atp22.co,atp22.oaf,
atp22.cooaf,atp22.psu,atp22.psd))
colnames(atp22.df) <- tag
wta22.df <- data.frame(cbind(wta22.h2h,wta22.co,wta22.oaf,
wta22.cooaf,wta22.psu,wta22.psd))
colnames(wta22.df) <- tag
averages <- function(...){
if (is.list(c(...))) {
x <- c(...)
} else {
x <- list(...)
}
n <- length(x) # number of components
res <- c()
N <- length(x[[1]]) # length of one component
for (i in 1:N){
n.cov <- n # to change according to which methods have coverage
sum <- 0
for (j in 1:n){
if (x[[j]][i]<0) {
n.cov <- n.cov-1
next
}
sum <- sum+x[[j]][i]
}
res <- c(res,sum/n.cov)
}
}
ensemble.results <- function(df,df.id,approach,sep="+"){
# df one of the 6 dataframes - "atp/wta"+"14/18/22" below
# df.id is for the comparison vectors
# atp14: 1, wta18: 2, atp18: 3, wta22: 4, atp22: 5
if (df.id==1){
basic.comp <- atp14.basic
test <- atp14.test$minutes
} else if (df.id==2) {
basic.comp <- wta18.basic
test <- wta18.test$minutes
} else if (df.id==3) {
basic.comp <- atp18.basic
test <- atp18.test$minutes
} else if (df.id==4) {
basic.comp <- wta22.basic
test <- wta22.test$minutes
} else if (df.id==5) {
basic.comp <- atp22.basic
test <- atp22.test$minutes
}
n1 <- length(basic.comp)
res <- data.frame(matrix(0,nrow=57,ncol=2)) # nrow=57=6c2+6c3+6c4+6c5+6c6
colnames(res) <- c("score","p-value")
row.idx <- 1
# 6c2
for (i in 1:5){
for (j in (i+1):6){
ens <- approach(df[,i],df[,j])
res[row.idx,1] <- sqrt(mean((test-ens)^2))
res[row.idx,2] <- t.test((test-basic.comp)^2,(test-ens)^2,
var.equal=TRUE,alternative="greater")$p.value
rownames(res)[row.idx] <- paste(tag[i],tag[j],sep=sep)
row.idx <- row.idx+1
}
}
# 6c3
for (i in 1:4){
for (j in (i+1):5){
for (k in (j+1):6){
ens <- approach(df[,i],df[,j],df[,k])
res[row.idx,1] <- sqrt(mean((test-ens)^2))
res[row.idx,2] <- t.test((test-basic.comp)^2,(test-ens)^2,
var.equal=TRUE,alternative="greater")$p.value
rownames(res)[row.idx] <- paste(tag[i],tag[j],tag[k],sep=sep)
row.idx <- row.idx+1
}
}
}
# 6c4
for (i in 1:5){
for (j in (i+1):6){
ens <- approach(as.list(df[,-c(i,j)]))
res[row.idx,1] <- sqrt(mean((test-ens)^2))
res[row.idx,2] <- t.test((test-basic.comp)^2,(test-ens)^2,
var.equal=TRUE,alternative="greater")$p.value
rownames(res)[row.idx] <- paste(tag[-c(i,j)],collapse=sep)
row.idx <- row.idx+1
}
}
# 6c5
for (i in 1:6){
ens <- approach(as.list(df[,-c(i)]))
res[row.idx,1] <- sqrt(mean((test-ens)^2))
res[row.idx,2] <- t.test((test-basic.comp)^2,(test-ens)^2,
var.equal=TRUE,alternative="greater")$p.value
rownames(res)[row.idx] <- paste(tag[-c(i)],collapse=sep)
row.idx <- row.idx+1
}
ens <- approach(as.list(df))
n3 <- length(ens)
res[row.idx,1] <- sqrt(mean((test-ens)^2))
res[row.idx,2] <- t.test((test-basic.comp)^2,(test-ens)^2,
var.equal=TRUE,alternative="greater")$p.value
rownames(res)[row.idx] <- "All"
return(res)
}
atp14.avg <- ensemble.results(atp14.df,df.id=1,averages)
averages <- function(...){
if (is.list(c(...))) {
x <- c(...)
} else {
x <- list(...)
}
n <- length(x) # number of components
res <- c()
N <- length(x[[1]]) # length of one component
for (i in 1:N){
n.cov <- n # to change according to which methods have coverage
sum <- 0
for (j in 1:n){
if (x[[j]][i]<0) {
n.cov <- n.cov-1
next
}
sum <- sum+x[[j]][i]
}
res <- c(res,sum/n.cov)
}
return(res)
}
ensemble.results <- function(df,df.id,approach,sep="+"){
# df one of the 6 dataframes - "atp/wta"+"14/18/22" below
# df.id is for the comparison vectors
# atp14: 1, wta18: 2, atp18: 3, wta22: 4, atp22: 5
if (df.id==1){
basic.comp <- atp14.basic
test <- atp14.test$minutes
} else if (df.id==2) {
basic.comp <- wta18.basic
test <- wta18.test$minutes
} else if (df.id==3) {
basic.comp <- atp18.basic
test <- atp18.test$minutes
} else if (df.id==4) {
basic.comp <- wta22.basic
test <- wta22.test$minutes
} else if (df.id==5) {
basic.comp <- atp22.basic
test <- atp22.test$minutes
}
n1 <- length(basic.comp)
res <- data.frame(matrix(0,nrow=57,ncol=2)) # nrow=57=6c2+6c3+6c4+6c5+6c6
colnames(res) <- c("score","p-value")
row.idx <- 1
# 6c2
for (i in 1:5){
for (j in (i+1):6){
ens <- approach(df[,i],df[,j])
res[row.idx,1] <- sqrt(mean((test-ens)^2))
res[row.idx,2] <- t.test((test-basic.comp)^2,(test-ens)^2,
var.equal=TRUE,alternative="greater")$p.value
rownames(res)[row.idx] <- paste(tag[i],tag[j],sep=sep)
row.idx <- row.idx+1
}
}
# 6c3
for (i in 1:4){
for (j in (i+1):5){
for (k in (j+1):6){
ens <- approach(df[,i],df[,j],df[,k])
res[row.idx,1] <- sqrt(mean((test-ens)^2))
res[row.idx,2] <- t.test((test-basic.comp)^2,(test-ens)^2,
var.equal=TRUE,alternative="greater")$p.value
rownames(res)[row.idx] <- paste(tag[i],tag[j],tag[k],sep=sep)
row.idx <- row.idx+1
}
}
}
# 6c4
for (i in 1:5){
for (j in (i+1):6){
ens <- approach(as.list(df[,-c(i,j)]))
res[row.idx,1] <- sqrt(mean((test-ens)^2))
res[row.idx,2] <- t.test((test-basic.comp)^2,(test-ens)^2,
var.equal=TRUE,alternative="greater")$p.value
rownames(res)[row.idx] <- paste(tag[-c(i,j)],collapse=sep)
row.idx <- row.idx+1
}
}
# 6c5
for (i in 1:6){
ens <- approach(as.list(df[,-c(i)]))
res[row.idx,1] <- sqrt(mean((test-ens)^2))
res[row.idx,2] <- t.test((test-basic.comp)^2,(test-ens)^2,
var.equal=TRUE,alternative="greater")$p.value
rownames(res)[row.idx] <- paste(tag[-c(i)],collapse=sep)
row.idx <- row.idx+1
}
ens <- approach(as.list(df))
res[row.idx,1] <- sqrt(mean((test-ens)^2))
res[row.idx,2] <- t.test((test-basic.comp)^2,(test-ens)^2,
var.equal=TRUE,alternative="greater")$p.value
rownames(res)[row.idx] <- "All"
return(res)
}
atp14.avg <- ensemble.results(atp14.df,df.id=1,averages)
write.csv(atp14.avg,"../Results/Ensembles/atp14_averages.csv")
wta18.avg <- ensemble.results(wta18.df,df.id=2,averages)
write.csv(wta18.avg,"../Results/Ensembles/wta18_averages.csv")
atp18.avg <- ensemble.results(atp18.df,df.id=3,averages)
write.csv(atp18.avg,"../Results/Ensembles/atp18_averages.csv")
wta22.avg <- ensemble.results(wta22.df,df.id=4,averages)
write.csv(wta22.avg,"../Results/Ensembles/wta22_averages.csv")
atp22.avg <- ensemble.results(atp22.df,df.id=5,averages)
write.csv(atp22.avg,"../Results/Ensembles/atp22_averages.csv")
aa <- averages(atp14.h2h,atp14.co)
tt <- (aa-atp14.test$minutes)^2
at <- tt
mean(at[which(!is.na(at))])
mean(at)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
# testing data
# if Error: no more error handlers available (recursive errors?); invoking 'abort' restart
# Warning: type 29 is unimplemented in 'type2char'Error in pmatch(rw, c("read", "write"), 0L) :
# INTEGER() can only be applied to a 'integer', not a 'unknown type #29'
# just run again
atp14.test <- read.csv('../New Data/atp/atp_testing_2014.csv')
atp18.test <- read.csv('../New Data/atp/atp_testing_2018.csv')
wta18.test <- read.csv('../New Data/wta/wta_testing_2018.csv')
atp22.test <- read.csv('../New Data/atp/atp_testing_2022.csv')
wta22.test <- read.csv('../New Data/wta/wta_testing_2022.csv')
ic.match <- function(score) grep("[A-Za-z]",score)
ic.atp14 <- ic.match(atp14.test$score)
ic.atp18 <- ic.match(atp18.test$score)
ic.wta18 <- ic.match(wta18.test$score)
ic.atp22 <- ic.match(atp22.test$score)
ic.wta22 <- ic.match(wta22.test$score)
atp14.test <- atp14.test[-ic.atp14,]
atp18.test <- atp18.test[-ic.atp18,]
wta18.test <- wta18.test[-ic.wta18,]
atp22.test <- atp22.test[-ic.atp22,]
wta22.test <- wta22.test[-ic.wta22,]
# reset indices after row removals
row.names(atp14.test) <- NULL
row.names(atp18.test) <- NULL
row.names(wta18.test) <- NULL
row.names(atp22.test) <- NULL
row.names(wta22.test) <- NULL
ind.atp14 <- which(!is.na(atp14.test$minutes))
ind.atp18 <- which(!is.na(atp18.test$minutes))
ind.wta18 <- which(!is.na(wta18.test$minutes))
ind.atp22 <- which(!is.na(atp22.test$minutes))
ind.wta22 <- which(!is.na(wta22.test$minutes))
atp14.test <- atp14.test[ind.atp14,]
atp18.test <- atp18.test[ind.atp18,]
wta18.test <- wta18.test[ind.wta18,]
atp22.test <- atp22.test[ind.atp22,]
wta22.test <- wta22.test[ind.wta22,]
atp14.basic <- readRDS("../Results/Individual/t_atp14_basic")
atp14.oaf <- readRDS("../Results/Individual/t_atp14_oaf")
atp14.h2h <- readRDS("../Results/Individual/t_atp14_h2h")
atp14.co <- readRDS("../Results/Individual/t_atp14_co")
atp14.cooaf <- readRDS("../Results/Individual/t_atp14_co(oaf)")
atp14.basic <- atp14.basic[ind.atp14]
atp14.oaf <- atp14.oaf[ind.atp14]
atp14.h2h <- atp14.h2h[ind.atp14]
atp14.co <- atp14.co[ind.atp14]
atp14.cooaf <- atp14.cooaf[ind.atp14]
wta18.basic <- readRDS("../Results/Individual/t_wta18_basic")
wta18.oaf <- readRDS("../Results/Individual/t_wta18_oaf")
wta18.h2h <- readRDS("../Results/Individual/t_wta18_h2h")
wta18.co <- readRDS("../Results/Individual/t_wta18_co")
wta18.cooaf <- readRDS("../Results/Individual/t_wta18_co(oaf)")
wta18.basic <- wta18.basic[ind.wta18]
wta18.oaf <- wta18.oaf[ind.wta18]
wta18.h2h <- wta18.h2h[ind.wta18]
wta18.co <- wta18.co[ind.wta18]
wta18.cooaf <- wta18.cooaf[ind.wta18]
atp18.basic <- readRDS("../Results/Individual/t_atp18_basic")
atp18.oaf <- readRDS("../Results/Individual/t_atp18_oaf")
atp18.h2h <- readRDS("../Results/Individual/t_atp18_h2h")
atp18.co <- readRDS("../Results/Individual/t_atp18_co")
atp18.cooaf <- readRDS("../Results/Individual/t_atp18_co(oaf)")
atp18.basic <- atp18.basic[ind.atp18]
atp18.oaf <- atp18.oaf[ind.atp18]
atp18.h2h <- atp18.h2h[ind.atp18]
atp18.co <- atp18.co[ind.atp18]
atp18.cooaf <- atp18.cooaf[ind.atp18]
wta22.basic <- readRDS("../Results/Individual/t_wta22_basic")
wta22.oaf <- readRDS("../Results/Individual/t_wta22_oaf")
wta22.h2h <- readRDS("../Results/Individual/t_wta22_h2h")
wta22.co <- readRDS("../Results/Individual/t_wta22_co")
wta22.cooaf <- readRDS("../Results/Individual/t_wta22_co(oaf)")
wta22.basic <- wta22.basic[ind.wta22]
wta22.oaf <- wta22.oaf[ind.wta22]
wta22.h2h <- wta22.h2h[ind.wta22]
wta22.co <- wta22.co[ind.wta22]
wta22.cooaf <- wta22.cooaf[ind.wta22]
atp22.basic <- readRDS("../Results/Individual/t_atp22_basic")
atp22.oaf <- readRDS("../Results/Individual/t_atp22_oaf")
atp22.h2h <- readRDS("../Results/Individual/t_atp22_h2h")
atp22.co <- readRDS("../Results/Individual/t_atp22_co")
atp22.cooaf <- readRDS("../Results/Individual/t_atp22_co(oaf)")
atp22.basic <- atp22.basic[ind.atp22]
atp22.oaf <- atp22.oaf[ind.atp22]
atp22.h2h <- atp22.h2h[ind.atp22]
atp22.co <- atp22.co[ind.atp22]
atp22.cooaf <- atp22.cooaf[ind.atp22]
atp14.psu <- readRDS("../Results/Individual/t_atp14_psu_accuracy")
atp14.psu <- atp14.psu[ind.atp14]
wta18.psu <- readRDS("../Results/Individual/t_wta18_psu_accuracy")
wta18.psu <- wta18.psu[ind.wta18]
atp18.psu <- readRDS("../Results/Individual/t_atp18_psu_accuracy")
atp18.psu <- atp18.psu[ind.atp18]
wta22.psu <- readRDS("../Results/Individual/t_wta22_psu_accuracy")
wta22.psu <- wta22.psu[ind.wta22]
atp22.psu <- readRDS("../Results/Individual/t_atp22_psu_accuracy")
atp22.psu <- atp22.psu[ind.atp22]
atp14.psd <- readRDS("../Results/Individual/t_atp14_psd_accuracy")
atp14.psd <- atp14.psd[ind.atp14]
wta18.psd <- readRDS("../Results/Individual/t_wta18_psd_accuracy")
wta18.psd <- wta18.psd[ind.wta18]
atp18.psd <- readRDS("../Results/Individual/t_atp18_psd_accuracy")
atp18.psd <- atp18.psd[ind.atp18]
wta22.psd <- readRDS("../Results/Individual/t_wta22_psd_accuracy")
wta22.psd <- wta22.psd[ind.wta22]
atp22.psd <- readRDS("../Results/Individual/t_atp22_psd_accuracy")
atp22.psd <- atp22.psd[ind.atp22]
# column order of df's must be in order of tags below
tag <- c("H2H","CO","OAF","CO(OAF)","PSU","PSD")
atp14.df <- data.frame(cbind(atp14.h2h,atp14.co,atp14.oaf,
atp14.cooaf,atp14.psu,atp14.psd))
colnames(atp14.df) <- tag
atp18.df <- data.frame(cbind(atp18.h2h,atp18.co,atp18.oaf,
atp18.cooaf,atp18.psu,atp18.psd))
colnames(atp18.df) <- tag
wta18.df <- data.frame(cbind(wta18.h2h,wta18.co,wta18.oaf,
wta18.cooaf,wta18.psu,wta18.psd))
colnames(wta18.df) <- tag
atp22.df <- data.frame(cbind(atp22.h2h,atp22.co,atp22.oaf,
atp22.cooaf,atp22.psu,atp22.psd))
colnames(atp22.df) <- tag
wta22.df <- data.frame(cbind(wta22.h2h,wta22.co,wta22.oaf,
wta22.cooaf,wta22.psu,wta22.psd))
colnames(wta22.df) <- tag
averages <- function(...){
if (is.list(c(...))) {
x <- c(...)
} else {
x <- list(...)
}
n <- length(x) # number of components
res <- c()
N <- length(x[[1]]) # length of one component
for (i in 1:N){
n.cov <- n # to change according to which methods have coverage
sum <- 0
for (j in 1:n){
if (x[[j]][i]<0) {
n.cov <- n.cov-1
next
}
sum <- sum+x[[j]][i]
}
res <- c(res,sum/n.cov)
}
return(res)
}
ensemble.results <- function(df,df.id,approach,sep="+"){
# df one of the 6 dataframes - "atp/wta"+"14/18/22" below
# df.id is for the comparison vectors
# atp14: 1, wta18: 2, atp18: 3, wta22: 4, atp22: 5
if (df.id==1){
basic.comp <- atp14.basic
test <- atp14.test$minutes
} else if (df.id==2) {
basic.comp <- wta18.basic
test <- wta18.test$minutes
} else if (df.id==3) {
basic.comp <- atp18.basic
test <- atp18.test$minutes
} else if (df.id==4) {
basic.comp <- wta22.basic
test <- wta22.test$minutes
} else if (df.id==5) {
basic.comp <- atp22.basic
test <- atp22.test$minutes
}
res <- data.frame(matrix(0,nrow=57,ncol=3)) # nrow=57=6c2+6c3+6c4+6c5+6c6
colnames(res) <- c("score","p-value","coverage")
row.idx <- 1
# 6c2
for (i in 1:5){
for (j in (i+1):6){
ens <- approach(df[,i],df[,j])
sqr.err <- (test-ens)^2
sqr.err <- sqr.err[which(!is.na(sqr.err))]
res[row.idx,1] <- sqrt(mean(sqr.err))
res[row.idx,2] <- t.test((test-basic.comp)^2,sqr.err,
var.equal=TRUE,alternative="greater")$p.value
res[row.idx,3] <- length(sqr.err)
rownames(res)[row.idx] <- paste(tag[i],tag[j],sep=sep)
row.idx <- row.idx+1
}
}
# 6c3
for (i in 1:4){
for (j in (i+1):5){
for (k in (j+1):6){
ens <- approach(df[,i],df[,j],df[,k])
sqr.err <- (test-ens)^2
sqr.err <- sqr.err[which(!is.na(sqr.err))]
res[row.idx,1] <- sqrt(mean(sqr.err))
res[row.idx,2] <- t.test((test-basic.comp)^2,sqr.err,
var.equal=TRUE,alternative="greater")$p.value
res[row.idx,3] <- length(sqr.err)
rownames(res)[row.idx] <- paste(tag[i],tag[j],tag[k],sep=sep)
row.idx <- row.idx+1
}
}
}
# 6c4
for (i in 1:5){
for (j in (i+1):6){
ens <- approach(as.list(df[,-c(i,j)]))
sqr.err <- (test-ens)^2
sqr.err <- sqr.err[which(!is.na(sqr.err))]
res[row.idx,1] <- sqrt(mean(sqr.err))
res[row.idx,2] <- t.test((test-basic.comp)^2,sqr.err,
var.equal=TRUE,alternative="greater")$p.value
res[row.idx,3] <- length(sqr.err)
rownames(res)[row.idx] <- paste(tag[-c(i,j)],collapse=sep)
row.idx <- row.idx+1
}
}
# 6c5
for (i in 1:6){
ens <- approach(as.list(df[,-c(i)]))
sqr.err <- (test-ens)^2
sqr.err <- sqr.err[which(!is.na(sqr.err))]
res[row.idx,1] <- sqrt(mean(sqr.err))
res[row.idx,2] <- t.test((test-basic.comp)^2,sqr.err,
var.equal=TRUE,alternative="greater")$p.value
res[row.idx,3] <- length(sqr.err)
rownames(res)[row.idx] <- paste(tag[-c(i)],collapse=sep)
row.idx <- row.idx+1
}
ens <- approach(as.list(df))
sqr.err <- (test-ens)^2
sqr.err <- sqr.err[which(!is.na(sqr.err))]
res[row.idx,1] <- sqrt(mean(sqr.err))
res[row.idx,2] <- t.test((test-basic.comp)^2,sqr.err,
var.equal=TRUE,alternative="greater")$p.value
res[row.idx,3] <- length(sqr.err)
rownames(res)[row.idx] <- "All"
return(res)
}
atp14.avg <- ensemble.results(atp14.df,df.id=1,averages)
write.csv(atp14.avg,"../Results/Ensembles/atp14_averages.csv")
wta18.avg <- ensemble.results(wta18.df,df.id=2,averages)
write.csv(wta18.avg,"../Results/Ensembles/wta18_averages.csv")
atp18.avg <- ensemble.results(atp18.df,df.id=3,averages)
write.csv(atp18.avg,"../Results/Ensembles/atp18_averages.csv")
wta22.avg <- ensemble.results(wta22.df,df.id=4,averages)
write.csv(wta22.avg,"../Results/Ensembles/wta22_averages.csv")
atp22.avg <- ensemble.results(atp22.df,df.id=5,averages)
write.csv(atp22.avg,"../Results/Ensembles/atp22_averages.csv")
