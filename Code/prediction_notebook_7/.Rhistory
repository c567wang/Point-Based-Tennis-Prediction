res16[co.valid] <- res16.co
res16[h2h.valid] <- res16.h2h
mean(res16)
# again see difference if co layer removed
res16.no_co <- res4
res16.no_co[h2h.valid] <- res16.h2h
mean(res16.no_co)
# later added to save results
res16.h2h.sv <- rep(-1,nrow(atp.test.2022))
res16.h2h.sv[h2h.valid] <- res16.h2h
res16.co.sv <- rep(-1,nrow(atp.test.2022))
res16.co.sv[co.valid] <- res16.co
# same augmentation as [5]
# augmentations to training set
# reload set after experiment
wta.train.2021$total_pts_served <- wta.train.2021$grass_pts_served +
wta.train.2021$clay_pts_served + wta.train.2021$hard_pts_served
wta.train.2021$total_service_pts_won <- wta.train.2021$grass_service_pts_won +
wta.train.2021$clay_service_pts_won + wta.train.2021$hard_service_pts_won
wta.train.2021$p.estimate <- wta.train.2021$total_service_pts_won /
wta.train.2021$total_pts_served
wta.train.2021$p.estimate[which(is.na(wta.train.2021$p.estimate))] <-
mean(wta.train.2021$p.estimate[-which(is.na(wta.train.2021$p.estimate))])
# get q estimates as well
wta.train.2021$total_pts_received <- wta.train.2021$grass_pts_received +
wta.train.2021$hard_pts_received + wta.train.2021$clay_pts_received
wta.train.2021$total_receiving_pts_won <- wta.train.2021$grass_receiving_pts_won +
wta.train.2021$hard_receiving_pts_won + wta.train.2021$clay_receiving_pts_won
wta.train.2021$q.estimate <- wta.train.2021$total_receiving_pts_won /
wta.train.2021$total_pts_received
wta.train.2021$q.estimate[which(is.na(wta.train.2021$q.estimate))] <-
mean(wta.train.2021$q.estimate[-which(is.na(wta.train.2021$q.estimate))])
q.bar <- mean(wta.train.2021$q.estimate)
n <- nrow(wta.test.2022)
res17 <- rep(0,n)
for (i in 1:n){
winner <- wta.test.2022$winner_name[i]
loser <- wta.test.2022$loser_name[i]
winner.idx <- which(wta.train.2021$name==winner)
loser.idx <- which(wta.train.2021$name==loser)
winner.adj.p <- wta.train.2021$p.estimate[winner.idx] -
(wta.train.2021$q.estimate[loser.idx] - q.bar)
loser.adj.p <- wta.train.2021$p.estimate[loser.idx] -
(wta.train.2021$q.estimate[winner.idx] - q.bar)
res17[i] <- winner.adj.p > loser.adj.p
}
mean(res17)
# p's
wta.train.2021$grass_p <- wta.train.2021$grass_service_pts_won/
wta.train.2021$grass_pts_served
wta.train.2021$hard_p <- wta.train.2021$hard_service_pts_won/
wta.train.2021$hard_pts_served
wta.train.2021$clay_p <- wta.train.2021$clay_service_pts_won/
wta.train.2021$clay_pts_served
wta.train.2021$grass_p[which(is.na(wta.train.2021$grass_p))] <-
mean(wta.train.2021$grass_p[-which(is.na(wta.train.2021$grass_p))])
wta.train.2021$hard_p[which(is.na(wta.train.2021$hard_p))] <-
mean(wta.train.2021$hard_p[-which(is.na(wta.train.2021$hard_p))])
wta.train.2021$clay_p[which(is.na(wta.train.2021$clay_p))] <-
mean(wta.train.2021$clay_p[-which(is.na(wta.train.2021$clay_p))])
# q's
wta.train.2021$grass_q <- wta.train.2021$grass_receiving_pts_won /
wta.train.2021$grass_pts_received
wta.train.2021$hard_q <- wta.train.2021$hard_receiving_pts_won /
wta.train.2021$hard_pts_received
wta.train.2021$clay_q <- wta.train.2021$clay_receiving_pts_won /
wta.train.2021$clay_pts_received
wta.train.2021$grass_q[which(is.na(wta.train.2021$grass_q))] <-
mean(wta.train.2021$grass_q[-which(is.na(wta.train.2021$grass_q))])
wta.train.2021$hard_q[which(is.na(wta.train.2021$hard_q))] <-
mean(wta.train.2021$hard_q[-which(is.na(wta.train.2021$hard_q))])
wta.train.2021$clay_q[which(is.na(wta.train.2021$clay_q))] <-
mean(wta.train.2021$clay_q[-which(is.na(wta.train.2021$clay_q))])
q.bar.grass <- mean(wta.train.2021$grass_q)
q.bar.hard <- mean(wta.train.2021$hard_q)
q.bar.clay <- mean(wta.train.2021$clay_q)
n <- nrow(wta.test.2022)
res18 <- rep(0,n)
for (i in 1:n){
winner <- wta.test.2022$winner_name[i]
loser <- wta.test.2022$loser_name[i]
winner.idx <- which(wta.train.2021$name==winner)
loser.idx <- which(wta.train.2021$name==loser)
surf <- wta.test.2022$surface[i]
if (surf=="Grass") {
winner.adj.p <- wta.train.2021$grass_p[winner.idx] -
(wta.train.2021$grass_q[loser.idx] - q.bar.grass)
loser.adj.p <- wta.train.2021$grass_p[loser.idx] -
(wta.train.2021$grass_q[winner.idx] - q.bar.grass)
res18[i] <- winner.adj.p > loser.adj.p
} else if (surf=="Hard"){
winner.adj.p <- wta.train.2021$hard_p[winner.idx] -
(wta.train.2021$hard_q[loser.idx] - q.bar.hard)
loser.adj.p <- wta.train.2021$hard_p[loser.idx] -
(wta.train.2021$hard_q[winner.idx] - q.bar.hard)
res18[i] <- winner.adj.p > loser.adj.p
} else if (surf=="Clay"){
winner.adj.p <- wta.train.2021$clay_p[winner.idx] -
(wta.train.2021$clay_q[loser.idx] - q.bar.clay)
loser.adj.p <- wta.train.2021$clay_p[loser.idx] -
(wta.train.2021$clay_q[winner.idx] - q.bar.clay)
res18[i] <- winner.adj.p > loser.adj.p
}
}
mean(res18)
wta.train.3yrs$total_pts_served <- wta.train.3yrs$grass_pts_served +
wta.train.3yrs$clay_pts_served + wta.train.3yrs$hard_pts_served
wta.train.3yrs$total_service_pts_won <- wta.train.3yrs$grass_service_pts_won +
wta.train.3yrs$clay_service_pts_won + wta.train.3yrs$hard_service_pts_won
wta.train.3yrs$p.estimate <- wta.train.3yrs$total_service_pts_won /
wta.train.3yrs$total_pts_served
wta.train.3yrs$p.estimate[which(is.na(wta.train.3yrs$p.estimate))] <-
mean(wta.train.3yrs$p.estimate[-which(is.na(wta.train.3yrs$p.estimate))])
# get q estimates as well
wta.train.3yrs$total_pts_received <- wta.train.3yrs$grass_pts_received +
wta.train.3yrs$hard_pts_received + wta.train.3yrs$clay_pts_received
wta.train.3yrs$total_receiving_pts_won <- wta.train.3yrs$grass_receiving_pts_won +
wta.train.3yrs$hard_receiving_pts_won + wta.train.3yrs$clay_receiving_pts_won
wta.train.3yrs$q.estimate <- wta.train.3yrs$total_receiving_pts_won /
wta.train.3yrs$total_pts_received
wta.train.3yrs$q.estimate[which(is.na(wta.train.3yrs$q.estimate))] <-
mean(wta.train.3yrs$q.estimate[-which(is.na(wta.train.3yrs$q.estimate))])
q.bar <- mean(wta.train.3yrs$q.estimate)
n <- nrow(wta.test.2022)
res19 <- rep(0,n)
for (i in 1:n){
winner <- wta.test.2022$winner_name[i]
loser <- wta.test.2022$loser_name[i]
winner.idx <- which(wta.train.3yrs$name==winner)
loser.idx <- which(wta.train.3yrs$name==loser)
winner.adj.p <- wta.train.3yrs$p.estimate[winner.idx] -
(wta.train.3yrs$q.estimate[loser.idx] - q.bar)
loser.adj.p <- wta.train.3yrs$p.estimate[loser.idx] -
(wta.train.3yrs$q.estimate[winner.idx] - q.bar)
res19[i] <- winner.adj.p > loser.adj.p
}
mean(res19)
# p's
wta.train.3yrs$grass_p <- wta.train.3yrs$grass_service_pts_won/
wta.train.3yrs$grass_pts_served
wta.train.3yrs$hard_p <- wta.train.3yrs$hard_service_pts_won/
wta.train.3yrs$hard_pts_served
wta.train.3yrs$clay_p <- wta.train.3yrs$clay_service_pts_won/
wta.train.3yrs$clay_pts_served
wta.train.3yrs$grass_p[which(is.na(wta.train.3yrs$grass_p))] <-
mean(wta.train.3yrs$grass_p[-which(is.na(wta.train.3yrs$grass_p))])
wta.train.3yrs$hard_p[which(is.na(wta.train.3yrs$hard_p))] <-
mean(wta.train.3yrs$hard_p[-which(is.na(wta.train.3yrs$hard_p))])
wta.train.3yrs$clay_p[which(is.na(wta.train.3yrs$clay_p))] <-
mean(wta.train.3yrs$clay_p[-which(is.na(wta.train.3yrs$clay_p))])
# q's
wta.train.3yrs$grass_q <- wta.train.3yrs$grass_receiving_pts_won /
wta.train.3yrs$grass_pts_received
wta.train.3yrs$hard_q <- wta.train.3yrs$hard_receiving_pts_won /
wta.train.3yrs$hard_pts_received
wta.train.3yrs$clay_q <- wta.train.3yrs$clay_receiving_pts_won /
wta.train.3yrs$clay_pts_received
wta.train.3yrs$grass_q[which(is.na(wta.train.3yrs$grass_q))] <-
mean(wta.train.3yrs$grass_q[-which(is.na(wta.train.3yrs$grass_q))])
wta.train.3yrs$hard_q[which(is.na(wta.train.3yrs$hard_q))] <-
mean(wta.train.3yrs$hard_q[-which(is.na(wta.train.3yrs$hard_q))])
wta.train.3yrs$clay_q[which(is.na(wta.train.3yrs$clay_q))] <-
mean(wta.train.3yrs$clay_q[-which(is.na(wta.train.3yrs$clay_q))])
q.bar.grass <- mean(wta.train.3yrs$grass_q)
q.bar.hard <- mean(wta.train.3yrs$hard_q)
q.bar.clay <- mean(wta.train.3yrs$clay_q)
n <- nrow(wta.test.2022)
res20 <- rep(0,n)
for (i in 1:n){
winner <- wta.test.2022$winner_name[i]
loser <- wta.test.2022$loser_name[i]
winner.idx <- which(wta.train.3yrs$name==winner)
loser.idx <- which(wta.train.3yrs$name==loser)
surf <- wta.test.2022$surface[i]
if (surf=="Grass") {
winner.adj.p <- wta.train.3yrs$grass_p[winner.idx] -
(wta.train.3yrs$grass_q[loser.idx] - q.bar.grass)
loser.adj.p <- wta.train.3yrs$grass_p[loser.idx] -
(wta.train.3yrs$grass_q[winner.idx] - q.bar.grass)
res20[i] <- winner.adj.p > loser.adj.p
} else if (surf=="Hard"){
winner.adj.p <- wta.train.3yrs$hard_p[winner.idx] -
(wta.train.3yrs$hard_q[loser.idx] - q.bar.hard)
loser.adj.p <- wta.train.3yrs$hard_p[loser.idx] -
(wta.train.3yrs$hard_q[winner.idx] - q.bar.hard)
res20[i] <- winner.adj.p > loser.adj.p
} else if (surf=="Clay"){
winner.adj.p <- wta.train.3yrs$clay_p[winner.idx] -
(wta.train.3yrs$clay_q[loser.idx] - q.bar.clay)
loser.adj.p <- wta.train.3yrs$clay_p[loser.idx] -
(wta.train.3yrs$clay_q[winner.idx] - q.bar.clay)
res20[i] <- winner.adj.p > loser.adj.p
}
}
mean(res20)
# make a copy where co augmentation will go
data.21 <- wta.h2h.2021
# in h2h/co datasets, p1 is always the winner
data.21$w_total_pts_served <- data.21$grass_pts_served1 +
data.21$hard_pts_served1 + data.21$clay_pts_served1
data.21$w_total_service_pts_won <- data.21$grass_service_pts_won1 +
data.21$hard_service_pts_won1 + data.21$clay_service_pts_won1
data.21$w_p <- data.21$w_total_service_pts_won/data.21$w_total_pts_served
data.21$l_total_pts_served <- data.21$grass_pts_served2 +
data.21$hard_pts_served2 + data.21$clay_pts_served2
data.21$l_total_service_pts_won <- data.21$grass_service_pts_won2 +
data.21$hard_service_pts_won2 + data.21$clay_service_pts_won2
data.21$l_p <- data.21$l_total_service_pts_won/data.21$l_total_pts_served
# first see accuracy for entries where h2h data is available
h2h.valid <- which(!is.na(data.21$w_p)) #l_p also works
res21.h2h <- rep(0,length(h2h.valid))
for (i in 1:length(h2h.valid)){
res21.h2h[i] <- data.21$w_p[h2h.valid[i]] > data.21$l_p[h2h.valid[i]]
}
mean(res21.h2h) # 0.84483
# next see accuracy for all entries where co data is available
data.21$w_total_pts_served_co <- wta.co.2021$grass_pts_served1 +
wta.co.2021$hard_pts_served1 + wta.co.2021$clay_pts_served1
data.21$w_total_service_pts_won_co <- wta.co.2021$grass_service_pts_won1 +
wta.co.2021$hard_service_pts_won1 + wta.co.2021$clay_service_pts_won1
data.21$w_p_co <- data.21$w_total_service_pts_won_co/data.21$w_total_pts_served_co
data.21$l_total_pts_served_co <- wta.co.2021$grass_pts_served2 +
wta.co.2021$hard_pts_served2 + wta.co.2021$clay_pts_served2
data.21$l_total_service_pts_won_co <- wta.co.2021$grass_service_pts_won2 +
wta.co.2021$hard_service_pts_won2 + wta.co.2021$clay_service_pts_won2
data.21$l_p_co <- data.21$l_total_service_pts_won_co/data.21$l_total_pts_served_co
co.valid <- which(!is.na(data.21$w_p_co) & !is.na(data.21$l_p_co)) #l_p_co also works
res21.co <- rep(0,length(co.valid))
for (i in 1:length(co.valid)){
res21.co[i] <- data.21$w_p_co[co.valid[i]] > data.21$l_p_co[co.valid[i]]
}
mean(res21.co) # 0.628
res21.no_co <- res5
res21.no_co[h2h.valid] <- res21.h2h
mean(res21.no_co) # 0.675
# finally h2h with co support
res21 <- res5 # first use general data and apply new results on top
res21[co.valid] <- res21.co
res21[h2h.valid] <- res21.h2h
mean(res21)
# later added to save results
res21.h2h.sv <- rep(-1,nrow(wta.test.2022))
res21.h2h.sv[h2h.valid] <- res21.h2h
res21.co.sv <- rep(-1,nrow(wta.test.2022))
res21.co.sv[co.valid] <- res21.co
data.22 <- wta.h2h.2021
# g for grass_p, h for hard_p, c for clay_p
data.22$w_g <- data.22$grass_service_pts_won1/data.22$grass_pts_served1
data.22$w_h <- data.22$hard_service_pts_won1/data.22$hard_pts_served1
data.22$w_c <- data.22$clay_service_pts_won1/data.22$clay_pts_served1
data.22$l_g <- data.22$grass_service_pts_won2/data.22$grass_pts_served2
data.22$l_h <- data.22$hard_service_pts_won2/data.22$hard_pts_served2
data.22$l_c <- data.22$clay_service_pts_won2/data.22$clay_pts_served2
# see performance for pure h2h data separated by surface
res22.h2h <- c() # initialize and add elements by res14.h2h <- c(res14.h2h,...)
h2h.valid <- rep(0,nrow(wta.test.2022))
for (i in 1:nrow(wta.test.2022)){
if (wta.test.2022$surface[i]=="Grass" && !is.na(data.22$w_g[i])){
res22.h2h <- c(res22.h2h, data.22$w_g[i] > data.22$l_g[i])
h2h.valid[i] <- 1
} else if (wta.test.2022$surface[i]=="Hard" && !is.na(data.22$w_h[i])){
res22.h2h <- c(res22.h2h, data.22$w_h[i] > data.22$l_h[i])
h2h.valid[i] <- 1
} else if (wta.test.2022$surface[i]=="Clay" && !is.na(data.22$w_c[i])){
res22.h2h <- c(res22.h2h, data.22$w_c[i] > data.22$l_c[i])
h2h.valid[i] <- 1
}
}
h2h.valid <- which(h2h.valid==1)
mean(res22.h2h) # 0.867
# see performance for pure co data separated by surface
data.22$w_g_co <- wta.co.2021$grass_service_pts_won1/wta.co.2021$grass_pts_served1
data.22$w_h_co <- wta.co.2021$hard_service_pts_won1/wta.co.2021$hard_pts_served1
data.22$w_c_co <- wta.co.2021$clay_service_pts_won1/wta.co.2021$clay_pts_served1
data.22$l_g_co <- wta.co.2021$grass_service_pts_won2/wta.co.2021$grass_pts_served2
data.22$l_h_co <- wta.co.2021$hard_service_pts_won2/wta.co.2021$hard_pts_served2
data.22$l_c_co <- wta.co.2021$clay_service_pts_won2/wta.co.2021$clay_pts_served2
res22.co <- c() # same method as before
co.valid <- rep(0,nrow(wta.test.2022))
for (i in 1:nrow(wta.test.2022)){
if (wta.test.2022$surface[i]=="Grass" &
!is.na(data.22$w_g_co[i]) & !is.na(data.22$l_g_co[i])){
res22.co <- c(res22.co, data.22$w_g_co[i] > data.22$l_g_co[i])
co.valid[i] <- 1
} else if (wta.test.2022$surface[i]=="Hard" &
!is.na(data.22$w_h_co[i]) & !is.na(data.22$l_h_co[i])){
res22.co <- c(res22.co, data.22$w_h_co[i] > data.22$l_h_co[i])
co.valid[i] <- 1
} else if (wta.test.2022$surface[i]=="Clay" &
!is.na(data.22$w_c_co[i]) & !is.na(data.22$l_c_co[i])){
res22.co <- c(res22.co, data.22$w_c_co[i] > data.22$l_c_co[i])
co.valid[i] <- 1
}
}
co.valid <- which(co.valid==1)
mean(res22.co) # 0.605
# h2h overlaid on general data
res22.no_co <- res6
res22.no_co[h2h.valid] <- res22.h2h
mean(res22.no_co) # 0.679
# h2h -> co -> general
res22 <- res6
res22[co.valid] <- res22.co
res22[h2h.valid] <- res22.h2h
mean(res22)
# later added to save results
res22.h2h.sv <- rep(-1,nrow(wta.test.2022))
res22.h2h.sv[h2h.valid] <- res22.h2h
res22.co.sv <- rep(-1,nrow(wta.test.2022))
res22.co.sv[co.valid] <- res22.co
# make a copy where co augmentation will go
data.23 <- wta.h2h.3yrs
# in h2h/co datasets, p1 is always the winner
data.23$w_total_pts_served <- data.23$grass_pts_served1 +
data.23$hard_pts_served1 + data.23$clay_pts_served1
data.23$w_total_service_pts_won <- data.23$grass_service_pts_won1 +
data.23$hard_service_pts_won1 + data.23$clay_service_pts_won1
data.23$w_p <- data.23$w_total_service_pts_won/data.23$w_total_pts_served
data.23$l_total_pts_served <- data.23$grass_pts_served2 +
data.23$hard_pts_served2 + data.23$clay_pts_served2
data.23$l_total_service_pts_won <- data.23$grass_service_pts_won2 +
data.23$hard_service_pts_won2 + data.23$clay_service_pts_won2
data.23$l_p <- data.23$l_total_service_pts_won/data.23$l_total_pts_served
# first see accuracy for entries where h2h data is available
h2h.valid <- which(!is.na(data.23$w_p)) #l_p also works
res23.h2h <- rep(0,length(h2h.valid))
for (i in 1:length(h2h.valid)){
res23.h2h[i] <- data.23$w_p[h2h.valid[i]] > data.23$l_p[h2h.valid[i]]
}
mean(res23.h2h) # 0.951
# next see accuracy for all entries where co data is available
data.23$w_total_pts_served_co <- wta.co.3yrs$grass_pts_served1 +
wta.co.3yrs$hard_pts_served1 + wta.co.3yrs$clay_pts_served1
data.23$w_total_service_pts_won_co <- wta.co.3yrs$grass_service_pts_won1 +
wta.co.3yrs$hard_service_pts_won1 + wta.co.3yrs$clay_service_pts_won1
data.23$w_p_co <- data.23$w_total_service_pts_won_co/data.23$w_total_pts_served_co
data.23$l_total_pts_served_co <- wta.co.3yrs$grass_pts_served2 +
wta.co.3yrs$hard_pts_served2 + wta.co.3yrs$clay_pts_served2
data.23$l_total_service_pts_won_co <- wta.co.3yrs$grass_service_pts_won2 +
wta.co.3yrs$hard_service_pts_won2 + wta.co.3yrs$clay_service_pts_won2
data.23$l_p_co <- data.23$l_total_service_pts_won_co/data.23$l_total_pts_served_co
co.valid <- which(!is.na(data.23$w_p_co) & !is.na(data.23$l_p_co))
res23.co <- rep(0,length(co.valid))
for (i in 1:length(co.valid)){
res23.co[i] <- data.23$w_p_co[co.valid[i]] > data.23$l_p_co[co.valid[i]]
}
mean(res23.co) # 0.606
# just h2h and general data
res23.no_co <- res7
res23.no_co[h2h.valid] <- res23.h2h
mean(res23.no_co) # 0.715
# finally h2h with co support
res23 <- res7
res23[co.valid] <- res23.co
res23[h2h.valid] <- res23.h2h
mean(res23)
# later added to save results
res23.h2h.sv <- rep(-1,nrow(wta.test.2022))
res23.h2h.sv[h2h.valid] <- res23.h2h
res23.co.sv <- rep(-1,nrow(wta.test.2022))
res23.co.sv[co.valid] <- res23.co
data.24 <- wta.h2h.3yrs
# g for grass_p, h for hard_p, c for clay_p
data.24$w_g <- data.24$grass_service_pts_won1/data.24$grass_pts_served1
data.24$w_h <- data.24$hard_service_pts_won1/data.24$hard_pts_served1
data.24$w_c <- data.24$clay_service_pts_won1/data.24$clay_pts_served1
data.24$l_g <- data.24$grass_service_pts_won2/data.24$grass_pts_served2
data.24$l_h <- data.24$hard_service_pts_won2/data.24$hard_pts_served2
data.24$l_c <- data.24$clay_service_pts_won2/data.24$clay_pts_served2
# see performance for pure h2h data separated by surface
res24.h2h <- c() # initialize and add elements by res14.h2h <- c(res14.h2h,...)
h2h.valid <- rep(0,nrow(wta.test.2022))
for (i in 1:nrow(wta.test.2022)){
if (wta.test.2022$surface[i]=="Grass" && !is.na(data.24$w_g[i])){
res24.h2h <- c(res24.h2h, data.24$w_g[i] > data.24$l_g[i])
h2h.valid[i] <- 1
} else if (wta.test.2022$surface[i]=="Hard" && !is.na(data.24$w_h[i])){
res24.h2h <- c(res24.h2h, data.24$w_h[i] > data.24$l_h[i])
h2h.valid[i] <- 1
} else if (wta.test.2022$surface[i]=="Clay" && !is.na(data.24$w_c[i])){
res24.h2h <- c(res24.h2h, data.24$w_c[i] > data.24$l_c[i])
h2h.valid[i] <- 1
}
}
h2h.valid <- which(h2h.valid==1)
mean(res24.h2h) # 0.926
# see performance for pure co data separated by surface
data.24$w_g_co <- wta.co.3yrs$grass_service_pts_won1/wta.co.3yrs$grass_pts_served1
data.24$w_h_co <- wta.co.3yrs$hard_service_pts_won1/wta.co.3yrs$hard_pts_served1
data.24$w_c_co <- wta.co.3yrs$clay_service_pts_won1/wta.co.3yrs$clay_pts_served1
data.24$l_g_co <- wta.co.3yrs$grass_service_pts_won2/wta.co.3yrs$grass_pts_served2
data.24$l_h_co <- wta.co.3yrs$hard_service_pts_won2/wta.co.3yrs$hard_pts_served2
data.24$l_c_co <- wta.co.3yrs$clay_service_pts_won2/wta.co.3yrs$clay_pts_served2
res24.co <- c() # same method as before
co.valid <- rep(0,nrow(wta.test.2022))
for (i in 1:nrow(wta.test.2022)){
if (wta.test.2022$surface[i]=="Grass" &
!is.na(data.24$w_g_co[i]) & !is.na(data.24$l_g_co[i])){
res24.co <- c(res24.co, data.24$w_g_co[i] > data.24$l_g_co[i])
co.valid[i] <- 1
} else if (wta.test.2022$surface[i]=="Hard" &
!is.na(data.24$w_h_co[i]) & !is.na(data.24$l_h_co[i])){
res24.co <- c(res24.co, data.24$w_h_co[i] > data.24$l_h_co[i])
co.valid[i] <- 1
} else if (wta.test.2022$surface[i]=="Clay" &
!is.na(data.24$w_c_co[i]) & !is.na(data.24$l_c_co[i])){
res24.co <- c(res24.co, data.24$w_c_co[i] > data.24$l_c_co[i])
co.valid[i] <- 1
}
}
co.valid <- which(co.valid==1)
mean(res24.co) # 0.606
# again see difference if co layer removed
res24.no_co <- res8
res24.no_co[h2h.valid] <- res24.h2h
mean(res24.no_co) # 0.656
res24 <- res8
res24[co.valid] <- res24.co
res24[h2h.valid] <- res24.h2h
mean(res24)
# later added to save results
res24.h2h.sv <- rep(-1,nrow(wta.test.2022))
res24.h2h.sv[h2h.valid] <- res24.h2h
res24.co.sv <- rep(-1,nrow(wta.test.2022))
res24.co.sv[co.valid] <- res24.co
# storing of results for future overlay
saveRDS(res1,file="res14atp_1yr_g_ns.rds")
saveRDS(res2,file="res14atp_1yr_g_s.rds")
saveRDS(res3,file="res14atp_3yr_g_ns.rds")
saveRDS(res4,file="res14atp_3yr_g_s.rds")
saveRDS(res5,file="res14wta_1yr_g_ns.rds")
saveRDS(res6,file="res14wta_1yr_g_s.rds")
saveRDS(res7,file="res14wta_3yr_g_ns.rds")
saveRDS(res8,file="res14wta_3yr_g_s.rds")
saveRDS(res9,file="res14atp_1yr_oaf_ns.rds")
saveRDS(res10,file="res14atp_1yr_oaf_s.rds")
saveRDS(res11,file="res14atp_3yr_oaf_ns.rds")
saveRDS(res12,file="res14atp_3yr_oaf_s.rds")
saveRDS(res17,file="res14wta_1yr_oaf_ns.rds")
saveRDS(res18,file="res14wta_1yr_oaf_s.rds")
saveRDS(res19,file="res14wta_3yr_oaf_ns.rds")
saveRDS(res20,file="res14wta_3yr_oaf_s.rds")
saveRDS(res13.h2h.sv,file="res14atp_1yr_h2h_ns.rds")
saveRDS(res13.co.sv,file="res14atp_1yr_co_ns.rds")
saveRDS(res14.h2h.sv,file="res14atp_1yr_h2h_s.rds")
saveRDS(res14.co.sv,file="res14atp_1yr_co_s.rds")
saveRDS(res15.h2h.sv,file="res14atp_3yr_h2h_ns.rds")
saveRDS(res15.co.sv,file="res14atp_3yr_co_ns.rds")
saveRDS(res16.h2h.sv,file="res14atp_3yr_h2h_s.rds")
saveRDS(res16.co.sv,file="res14atp_3yr_co_s.rds")
saveRDS(res21.h2h.sv,file="res14wta_1yr_h2h_ns.rds")
saveRDS(res21.co.sv,file="res14wta_1yr_co_ns.rds")
saveRDS(res22.h2h.sv,file="res14wta_1yr_h2h_s.rds")
saveRDS(res22.co.sv,file="res14wta_1yr_co_s.rds")
saveRDS(res23.h2h.sv,file="res14wta_3yr_h2h_ns.rds")
saveRDS(res23.co.sv,file="res14wta_3yr_co_ns.rds")
saveRDS(res24.h2h.sv,file="res14wta_3yr_h2h_s.rds")
saveRDS(res24.co.sv,file="res14wta_3yr_co_s.rds")
res14atp.1yr.h2h.ns <- readRDS("res14atp_1yr_h2h_ns.rds")
res14atp.1yr.h2h.s <- readRDS("res14atp_1yr_h2h_s.rds")
res14atp.3yr.h2h.ns <- readRDS("res14atp_3yr_h2h_ns.rds")
res14atp.3yr.h2h.s <- readRDS("res14atp_3yr_h2h_s.rds")
res14atp.1yr.co.ns <- readRDS("res14atp_1yr_co_ns.rds")
res14atp.1yr.co.s <- readRDS("res14atp_1yr_co_s.rds")
res14atp.3yr.co.ns <- readRDS("res14atp_3yr_co_ns.rds")
res14atp.3yr.co.s <- readRDS("res14atp_3yr_co_s.rds")
res14atp.1yr.oaf.ns <- readRDS("res14atp_1yr_oaf_ns.rds")
res14atp.1yr.oaf.s <- readRDS("res14atp_1yr_oaf_s.rds")
res14atp.3yr.oaf.ns <- readRDS("res14atp_3yr_oaf_ns.rds")
res14atp.3yr.oaf.s <- readRDS("res14atp_3yr_oaf_s.rds")
res14wta.1yr.h2h.ns <- readRDS("res14wta_1yr_h2h_ns.rds")
res14wta.1yr.h2h.s <- readRDS("res14wta_1yr_h2h_s.rds")
res14wta.3yr.h2h.ns <- readRDS("res14wta_3yr_h2h_ns.rds")
res14wta.3yr.h2h.s <- readRDS("res14wta_3yr_h2h_s.rds")
res14wta.1yr.co.ns <- readRDS("res14wta_1yr_co_ns.rds")
res14wta.1yr.co.s <- readRDS("res14wta_1yr_co_s.rds")
res14wta.3yr.co.ns <- readRDS("res14wta_3yr_co_ns.rds")
res14wta.3yr.co.s <- readRDS("res14wta_3yr_co_s.rds")
res14wta.1yr.oaf.ns <- readRDS("res14wta_1yr_oaf_ns.rds")
res14wta.1yr.oaf.s <- readRDS("res14wta_1yr_oaf_s.rds")
res14wta.3yr.oaf.ns <- readRDS("res14wta_3yr_oaf_ns.rds")
res14wta.3yr.oaf.s <- readRDS("res14wta_3yr_oaf_s.rds")
overlay.h2h.oaf <- function(h2h,oaf){
h2h.valid <- which(!(h2h==-1))
res <- oaf
res[h2h.valid] <- h2h[h2h.valid]
mean(res)
}
overlay.h2h.oaf(res14atp.1yr.h2h.ns,res14atp.1yr.oaf.ns)
overlay.h2h.oaf(res14atp.1yr.h2h.s,res14atp.1yr.oaf.s)
overlay.h2h.oaf(res14atp.3yr.h2h.ns,res14atp.3yr.oaf.ns)
overlay.h2h.oaf(res14atp.3yr.h2h.s,res14atp.3yr.oaf.s)
overlay.h2h.oaf(res14wta.1yr.h2h.ns,res14wta.1yr.oaf.ns)
overlay.h2h.oaf(res14wta.1yr.h2h.s,res14wta.1yr.oaf.s)
overlay.h2h.oaf(res14wta.3yr.h2h.ns,res14wta.3yr.oaf.ns)
overlay.h2h.oaf(res14wta.3yr.h2h.s,res14wta.3yr.oaf.s)
overlay.h2h.co.oaf <- function(h2h,co,oaf){
h2h.valid <- which(!(h2h==-1))
co.valid <- which(!(co==-1))
res <- oaf
res[co.valid] <- co[co.valid]
res[h2h.valid] <- h2h[h2h.valid]
mean(res)
}
overlay.h2h.co.oaf(res14atp.1yr.h2h.ns,res14atp.1yr.co.ns,res14atp.1yr.oaf.ns)
overlay.h2h.co.oaf(res14atp.1yr.h2h.s,res14atp.1yr.co.s,res14atp.1yr.oaf.s)
overlay.h2h.co.oaf(res14atp.3yr.h2h.ns,res14atp.3yr.co.ns,res14atp.3yr.oaf.ns)
overlay.h2h.co.oaf(res14atp.3yr.h2h.s,res14atp.3yr.co.s,res14atp.3yr.oaf.s)
overlay.h2h.co.oaf(res14wta.1yr.h2h.ns,res14wta.1yr.co.ns,res14wta.1yr.oaf.ns)
overlay.h2h.co.oaf(res14wta.1yr.h2h.s,res14wta.1yr.co.s,res14wta.1yr.oaf.s)
overlay.h2h.co.oaf(res14wta.3yr.h2h.ns,res14wta.3yr.co.ns,res14wta.3yr.oaf.ns)
overlay.h2h.co.oaf(res14wta.3yr.h2h.s,res14wta.3yr.co.s,res14wta.3yr.oaf.s)
