return(entries)
}
time.in.seconds <- function(string){
split.time <- strsplit(string,":")[[1]]
h <- split.time[1]
m <- split.time[2]
s <- split.time[3]
time <- 3600*as.numeric(h)+60*as.numeric(m)+as.numeric(s)
return(time)
}
add.time.in.seconds <- function(dat){
# given dataset dat with column 'ElapsedTime', adds return vector
# contains the same elapsed time but in only seconds
# dat$time <- add.time.in.seconds(dat)
etime <- dat$ElapsedTime
n <- length(etime)
time <- rep(0,n)
for (i in 1:n){
time[i] <- time.in.seconds(etime[i])
}
return(time)
}
hist.of.dist.at.time.of.ret <- function(time,dist.ran.1,dist.ran.2,limit=60,main="entries"){
# returns the entries used for histogram and creates the basic histogram as well
# time - time in seconds of when the match was retired
# dist.ran.1(.2) - the distance ran for the retired game/walkover
# !!! On limit:
# For each match, choosing to take the time closest to the time given
# limit is used to specify the shortest/longest times acceptable
# so times in [time-limit,time+limit] have their distances kept
# default value is 60 which corresponds to a 2 minute long interval
# only getting match_id and distances
relevant <- distance[which((distance$time>=time-60)
&(distance$time<=time+60)),c(1,6,8,9)]
matches <- unique(relevant[,1])
i <- 1
j <- 1
m <- nrow(relevant)
n <- length(matches)
entries <- rep(0,2*n)
# larger than limit so in the first loop the second if always true
time.gap <- limit+1
while (i<=m & j<=n){
if (relevant[i,1]==matches[j]){
if (distance$time[i]-time<time.gap){
time.gap <- distance$time[i]-time
entries[2*j-1] <- relevant[i,2]
entries[2*j] <- relevant[i,3]
}
i <- i+1
} else {
j <- j+1
time.gap <- limit+1
}
}
entries <- entries[-which(entries==0)]
hist(entries,main=main)
abline(v=c(dist.ran.1,dist.ran.2),lty=2,col='red')
return(list(relevant,entries))
}
rallies.res <- hist.of.rallies.at.ret(16,403,atp=FALSE)
points.res <- hist.of.points.at.ret(16,106,atp=FALSE)
matches <- read.csv('../Data Lake/Point-By-Point/2011-wimbledon-matches.csv')
ret.id <- matches$match_id[which(matches$status=="Retired")]
r <- length(ret.id)
for (i in 1:r){
wta_match <- substr(ret.id[i],nchar(ret.id[i])-3,nchar(ret.id[i])-3)=='2'
if (wta_match) {
# WTA match
ret.time <- tail(wta.rallies$ElapsedTime[which(wta.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(wta.rallies$GameNoAcc[which(wta.rallies$MatchID==ret.id)[i]],1)
ret.rallies <- tail(wta.rallies$RalliesAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(wta.points$PointsAcc[which(wta.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(wta.distance$P1DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(wta.distance$P2DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
} else {
# ATP match
ret.time <- tail(atp.rallies$ElapsedTime[which(atp.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(atp.rallies$GameNoAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(atp.rallies$RalliesAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(atp.points$PointsAcc[which(atp.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(atp.distance$P1DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(atp.distance$P2DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
}
if (length(ret.games)!=0 && !is.na(ret.games)){
if (length(ret.rallies)!=0 && !is.na(ret.rallies)) {
rallies.res <- hist.of.rallies.at.ret(
ret.games,ret.rallies,atp=!wta_match,main=ret_id[i])
}
if (length(ret.points)!=0 && !is.na(ret.points)) {
points.res <- hist.of.points.at.ret(
ret.games,ret.points,atp=!wta_match,main=ret_id[i])
}
if (length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1 && !is.na(ret.dis2))) {
distance.res <- hist.of.dist.at.ret(ret.games,ret.dis1,ret.dis2,main=ret_id[i])
}
}
if (length(ret.time)!=0 && !is.na(ret.time) &&
length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1) && !is.na(ret.dis2)) {
distance.time.res <- hist.of.dist.at.time.of.ret(
ret.time,ret.dis1,ret.dis2,main=ret_id[i])
}
}
matches <- read.csv('../Data Lake/Point-By-Point/2011-wimbledon-matches.csv')
ret.id <- matches$match_id[which(matches$status=="Retired")]
r <- length(ret.id)
for (i in 1:r){
wta_match <- substr(ret.id[i],nchar(ret.id[i])-3,nchar(ret.id[i])-3)=='2'
if (wta_match) {
# WTA match
ret.time <- tail(wta.rallies$ElapsedTime[which(wta.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(wta.rallies$GameNoAcc[which(wta.rallies$MatchID==ret.id)[i]],1)
ret.rallies <- tail(wta.rallies$RalliesAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(wta.points$PointsAcc[which(wta.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(wta.distance$P1DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(wta.distance$P2DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
} else {
# ATP match
ret.time <- tail(atp.rallies$ElapsedTime[which(atp.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(atp.rallies$GameNoAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(atp.rallies$RalliesAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(atp.points$PointsAcc[which(atp.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(atp.distance$P1DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(atp.distance$P2DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
}
if (length(ret.games)!=0 && !is.na(ret.games)){
if (length(ret.rallies)!=0 && !is.na(ret.rallies)) {
rallies.res <- hist.of.rallies.at.ret(
ret.games,ret.rallies,atp=!wta_match,main=ret.id[i])
}
if (length(ret.points)!=0 && !is.na(ret.points)) {
points.res <- hist.of.points.at.ret(
ret.games,ret.points,atp=!wta_match,main=ret.id[i])
}
if (length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1 && !is.na(ret.dis2))) {
distance.res <- hist.of.dist.at.ret(ret.games,ret.dis1,ret.dis2,main=ret.id[i])
}
}
if (length(ret.time)!=0 && !is.na(ret.time) &&
length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1) && !is.na(ret.dis2)) {
distance.time.res <- hist.of.dist.at.time.of.ret(
ret.time,ret.dis1,ret.dis2,main=ret.id[i])
}
}
ret.games
View(wta.rallies)
ret.id[1]+"a"
paste(ret.id[1],"a")
ret.id[3]
matches <- read.csv('../Data Lake/Point-By-Point/2011-wimbledon-matches.csv')
ret.id <- matches$match_id[which(matches$status=="Retired")]
r <- length(ret.id)
for (i in 1:r){
wta_match <- substr(ret.id[i],nchar(ret.id[i])-3,nchar(ret.id[i])-3)=='2'
if (wta_match) {
# WTA match
ret.time <- tail(wta.rallies$ElapsedTime[which(wta.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(wta.rallies$GameNoAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(wta.rallies$RalliesAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(wta.points$PointsAcc[which(wta.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(wta.distance$P1DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(wta.distance$P2DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
} else {
# ATP match
ret.time <- tail(atp.rallies$ElapsedTime[which(atp.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(atp.rallies$GameNoAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(atp.rallies$RalliesAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(atp.points$PointsAcc[which(atp.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(atp.distance$P1DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(atp.distance$P2DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
}
if (length(ret.games)!=0 && !is.na(ret.games)){
if (length(ret.rallies)!=0 && !is.na(ret.rallies)) {
rallies.res <- hist.of.rallies.at.ret(
ret.games,ret.rallies,atp=!wta_match,main=paste(ret.id[i],"Rallies"))
}
if (length(ret.points)!=0 && !is.na(ret.points)) {
points.res <- hist.of.points.at.ret(
ret.games,ret.points,atp=!wta_match,main=paste(ret.id[i],"Points"))
}
if (length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1 && !is.na(ret.dis2))) {
distance.res <- hist.of.dist.at.ret(
ret.games,ret.dis1,ret.dis2,main=paste(ret.id[i],"Distance(GP)"))
}
}
if (length(ret.time)!=0 && !is.na(ret.time) &&
length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1) && !is.na(ret.dis2)) {
distance.time.res <- hist.of.dist.at.time.of.ret(
ret.time,ret.dis1,ret.dis2,main=paste(ret.id[i],"Distance(Time)"))
}
}
matches <- read.csv('../Data Lake/Point-By-Point/2015-wimbledon-matches.csv')
ret.id <- matches$match_id[which(matches$status=="Retired")]
r <- length(ret.id)
for (i in 1:r){
wta_match <- substr(ret.id[i],nchar(ret.id[i])-3,nchar(ret.id[i])-3)=='2'
if (wta_match) {
# WTA match
ret.time <- tail(wta.rallies$ElapsedTime[which(wta.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(wta.rallies$GameNoAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(wta.rallies$RalliesAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(wta.points$PointsAcc[which(wta.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(wta.distance$P1DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(wta.distance$P2DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
} else {
# ATP match
ret.time <- tail(atp.rallies$ElapsedTime[which(atp.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(atp.rallies$GameNoAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(atp.rallies$RalliesAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(atp.points$PointsAcc[which(atp.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(atp.distance$P1DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(atp.distance$P2DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
}
if (length(ret.games)!=0 && !is.na(ret.games)){
if (length(ret.rallies)!=0 && !is.na(ret.rallies)) {
rallies.res <- hist.of.rallies.at.ret(
ret.games,ret.rallies,atp=!wta_match,main=paste(ret.id[i],"Rallies"))
}
if (length(ret.points)!=0 && !is.na(ret.points)) {
points.res <- hist.of.points.at.ret(
ret.games,ret.points,atp=!wta_match,main=paste(ret.id[i],"Points"))
}
if (length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1 && !is.na(ret.dis2))) {
distance.res <- hist.of.dist.at.ret(
ret.games,ret.dis1,ret.dis2,main=paste(ret.id[i],"Distance(GP)"))
}
}
if (length(ret.time)!=0 && !is.na(ret.time) &&
length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1) && !is.na(ret.dis2)) {
distance.time.res <- hist.of.dist.at.time.of.ret(
ret.time,ret.dis1,ret.dis2,main=paste(ret.id[i],"Distance(Time)"))
}
}
wta_match
i
ret.id[1]
# file.name e.g. '../Data Lake/Point-By-Point/2015-wimbledon-matches.csv'
retired.match.histograms <- function(file.name){
matches <- read.csv(file.name)
ret.id <- matches$match_id[which(matches$status=="Retired")]
if (is.na(ret.id)) quit()
r <- length(ret.id)
for (i in 1:r){
wta_match <- substr(ret.id[i],nchar(ret.id[i])-3,nchar(ret.id[i])-3)=='2'
if (wta_match) {
# WTA match
ret.time <- tail(wta.rallies$ElapsedTime[which(wta.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(wta.rallies$GameNoAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(wta.rallies$RalliesAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(wta.points$PointsAcc[which(wta.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(wta.distance$P1DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(wta.distance$P2DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
} else {
# ATP match
ret.time <- tail(atp.rallies$ElapsedTime[which(atp.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(atp.rallies$GameNoAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(atp.rallies$RalliesAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(atp.points$PointsAcc[which(atp.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(atp.distance$P1DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(atp.distance$P2DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
}
if (length(ret.games)!=0 && !is.na(ret.games)){
if (length(ret.rallies)!=0 && !is.na(ret.rallies)) {
rallies.res <- hist.of.rallies.at.ret(
ret.games,ret.rallies,atp=!wta_match,main=paste(ret.id[i],"Rallies"))
}
if (length(ret.points)!=0 && !is.na(ret.points)) {
points.res <- hist.of.points.at.ret(
ret.games,ret.points,atp=!wta_match,main=paste(ret.id[i],"Points"))
}
if (length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1 && !is.na(ret.dis2))) {
distance.res <- hist.of.dist.at.ret(
ret.games,ret.dis1,ret.dis2,main=paste(ret.id[i],"Distance(GP)"))
}
}
if (length(ret.time)!=0 && !is.na(ret.time) &&
length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1) && !is.na(ret.dis2)) {
distance.time.res <- hist.of.dist.at.time.of.ret(
ret.time,ret.dis1,ret.dis2,main=paste(ret.id[i],"Distance(Time)"))
}
}
}
# file.name e.g. '../Data Lake/Point-By-Point/2015-wimbledon-matches.csv'
retired.match.histograms <- function(file.name){
matches <- read.csv(file.name)
ret.id <- matches$match_id[which(matches$status=="Retired")]
if (is.na(ret.id)) quit()
r <- length(ret.id)
for (i in 1:r){
wta_match <- substr(ret.id[i],nchar(ret.id[i])-3,nchar(ret.id[i])-3)=='2'
if (wta_match) {
# WTA match
ret.time <- tail(wta.rallies$ElapsedTime[which(wta.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(wta.rallies$GameNoAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(wta.rallies$RalliesAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(wta.points$PointsAcc[which(wta.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(wta.distance$P1DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(wta.distance$P2DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
} else {
# ATP match
ret.time <- tail(atp.rallies$ElapsedTime[which(atp.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(atp.rallies$GameNoAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(atp.rallies$RalliesAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(atp.points$PointsAcc[which(atp.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(atp.distance$P1DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(atp.distance$P2DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
}
if (length(ret.games)!=0 && !is.na(ret.games)){
if (length(ret.rallies)!=0 && !is.na(ret.rallies)) {
rallies.res <- hist.of.rallies.at.ret(
ret.games,ret.rallies,atp=!wta_match,main=paste(ret.id[i],"Rallies"))
}
if (length(ret.points)!=0 && !is.na(ret.points)) {
points.res <- hist.of.points.at.ret(
ret.games,ret.points,atp=!wta_match,main=paste(ret.id[i],"Points"))
}
if (length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1 && !is.na(ret.dis2))) {
distance.res <- hist.of.dist.at.ret(
ret.games,ret.dis1,ret.dis2,main=paste(ret.id[i],"Distance(GP)"))
}
}
if (length(ret.time)!=0 && !is.na(ret.time) &&
length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1) && !is.na(ret.dis2)) {
distance.time.res <- hist.of.dist.at.time.of.ret(
ret.time,ret.dis1,ret.dis2,main=paste(ret.id[i],"Distance(Time)"))
}
}
}
retired.match.histograms('../Data Lake/Point-By-Point/2015-wimbledon-matches.csv')
ret.id
# file.name e.g. '../Data Lake/Point-By-Point/2015-wimbledon-matches.csv'
retired.match.histograms <- function(file.name){
matches <- read.csv(file.name)
ret.id <- matches$match_id[which(matches$status=="Retired")]
if (length(ret.id)==0) quit()
r <- length(ret.id)
for (i in 1:r){
wta_match <- substr(ret.id[i],nchar(ret.id[i])-3,nchar(ret.id[i])-3)=='2'
if (wta_match) {
# WTA match
ret.time <- tail(wta.rallies$ElapsedTime[which(wta.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(wta.rallies$GameNoAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(wta.rallies$RalliesAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(wta.points$PointsAcc[which(wta.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(wta.distance$P1DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(wta.distance$P2DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
} else {
# ATP match
ret.time <- tail(atp.rallies$ElapsedTime[which(atp.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(atp.rallies$GameNoAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(atp.rallies$RalliesAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(atp.points$PointsAcc[which(atp.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(atp.distance$P1DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(atp.distance$P2DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
}
if (length(ret.games)!=0 && !is.na(ret.games)){
if (length(ret.rallies)!=0 && !is.na(ret.rallies)) {
rallies.res <- hist.of.rallies.at.ret(
ret.games,ret.rallies,atp=!wta_match,main=paste(ret.id[i],"Rallies"))
}
if (length(ret.points)!=0 && !is.na(ret.points)) {
points.res <- hist.of.points.at.ret(
ret.games,ret.points,atp=!wta_match,main=paste(ret.id[i],"Points"))
}
if (length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1 && !is.na(ret.dis2))) {
distance.res <- hist.of.dist.at.ret(
ret.games,ret.dis1,ret.dis2,main=paste(ret.id[i],"Distance(GP)"))
}
}
if (length(ret.time)!=0 && !is.na(ret.time) &&
length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1) && !is.na(ret.dis2)) {
distance.time.res <- hist.of.dist.at.time.of.ret(
ret.time,ret.dis1,ret.dis2,main=paste(ret.id[i],"Distance(Time)"))
}
}
}
retired.match.histograms('../Data Lake/Point-By-Point/2015-wimbledon-matches.csv')
# file.name e.g. '../Data Lake/Point-By-Point/2015-wimbledon-matches.csv'
retired.match.histograms <- function(file.name){
matches <- read.csv(file.name)
ret.id <- matches$match_id[which(matches$status=="Retired")]
if (length(ret.id)==0) quit()
r <- length(ret.id)
for (i in 1:r){
wta_match <- substr(ret.id[i],nchar(ret.id[i])-3,nchar(ret.id[i])-3)=='2'
if (wta_match) {
# WTA match
ret.time <- tail(wta.rallies$ElapsedTime[which(wta.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(wta.rallies$GameNoAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(wta.rallies$RalliesAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(wta.points$PointsAcc[which(wta.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(wta.distance$P1DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(wta.distance$P2DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
} else {
# ATP match
ret.time <- tail(atp.rallies$ElapsedTime[which(atp.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(atp.rallies$GameNoAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(atp.rallies$RalliesAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(atp.points$PointsAcc[which(atp.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(atp.distance$P1DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(atp.distance$P2DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
}
if (length(ret.games)!=0 && !is.na(ret.games)){
if (length(ret.rallies)!=0 && !is.na(ret.rallies)) {
rallies.res <- hist.of.rallies.at.ret(
ret.games,ret.rallies,atp=!wta_match,main=paste(ret.id[i],"Rallies"))
}
if (length(ret.points)!=0 && !is.na(ret.points)) {
points.res <- hist.of.points.at.ret(
ret.games,ret.points,atp=!wta_match,main=paste(ret.id[i],"Points"))
}
if (length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1 && !is.na(ret.dis2))) {
distance.res <- hist.of.dist.at.ret(
ret.games,ret.dis1,ret.dis2,main=paste(ret.id[i],"Distance(GP)"))
}
}
if (length(ret.time)!=0 && !is.na(ret.time) &&
length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1) && !is.na(ret.dis2)) {
distance.time.res <- hist.of.dist.at.time.of.ret(
ret.time,ret.dis1,ret.dis2,main=paste(ret.id[i],"Distance(Time)"))
}
}
}
retired.match.histograms('../Data Lake/Point-By-Point/2015-wimbledon-matches.csv')
# file.name e.g. '../Data Lake/Point-By-Point/2015-wimbledon-matches.csv'
retired.match.histograms <- function(file.name){
matches <- read.csv(file.name)
ret.id <- matches$match_id[which(matches$status=="Retired")]
if (length(ret.id)==0) return()
r <- length(ret.id)
for (i in 1:r){
wta_match <- substr(ret.id[i],nchar(ret.id[i])-3,nchar(ret.id[i])-3)=='2'
if (wta_match) {
# WTA match
ret.time <- tail(wta.rallies$ElapsedTime[which(wta.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(wta.rallies$GameNoAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(wta.rallies$RalliesAcc[which(wta.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(wta.points$PointsAcc[which(wta.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(wta.distance$P1DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(wta.distance$P2DistanceAcc[which(wta.distance$MatchID==ret.id[i])],1)
} else {
# ATP match
ret.time <- tail(atp.rallies$ElapsedTime[which(atp.rallies$MatchID==ret.id[i])],1)
ret.games <- tail(atp.rallies$GameNoAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.rallies <- tail(atp.rallies$RalliesAcc[which(atp.rallies$MatchID==ret.id[i])],1)
ret.points <- tail(atp.points$PointsAcc[which(atp.points$MatchID==ret.id[i])],1)
ret.dis1 <- tail(atp.distance$P1DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
ret.dis2 <- tail(atp.distance$P2DistanceAcc[which(atp.distance$MatchID==ret.id[i])],1)
}
if (length(ret.games)!=0 && !is.na(ret.games)){
if (length(ret.rallies)!=0 && !is.na(ret.rallies)) {
rallies.res <- hist.of.rallies.at.ret(
ret.games,ret.rallies,atp=!wta_match,main=paste(ret.id[i],"Rallies"))
}
if (length(ret.points)!=0 && !is.na(ret.points)) {
points.res <- hist.of.points.at.ret(
ret.games,ret.points,atp=!wta_match,main=paste(ret.id[i],"Points"))
}
if (length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1 && !is.na(ret.dis2))) {
distance.res <- hist.of.dist.at.ret(
ret.games,ret.dis1,ret.dis2,main=paste(ret.id[i],"Distance(GP)"))
}
}
if (length(ret.time)!=0 && !is.na(ret.time) &&
length(ret.dis1)!=0 && length(ret.dis2)!=0 &&
!is.na(ret.dis1) && !is.na(ret.dis2)) {
distance.time.res <- hist.of.dist.at.time.of.ret(
ret.time,ret.dis1,ret.dis2,main=paste(ret.id[i],"Distance(Time)"))
}
}
}
retired.match.histograms('../Data Lake/Point-By-Point/2015-wimbledon-matches.csv')
retired.match.histograms('../Data Lake/Point-By-Point/2015-wimbledon-matches.csv')
retired.match.histograms('../Data Lake/Point-By-Point/2011-wimbledon-matches.csv')
retired.match.histograms('../Data Lake/Point-By-Point/2011-frenchopen-matches.csv')
retired.match.histograms('../Data Lake/Point-By-Point/2011-usopen-matches.csv')
retired.match.histograms('../Data Lake/Point-By-Point/2011-ausopen-matches.csv')
retired.match.histograms('../Data Lake/Point-By-Point/2011-wimbledon-matches.csv')
ret.time
substr(ret.itme,3,4)
substr(ret.time,3,4)
as.numeric(substr(ret.time,3,4))
as.numeric(substr(ret.time,1,1))
as.numeric(substr(ret.time,6,7))
# grep("[A-Za-z]",score)
m.data <- read.csv('../Data Lake/Matches/wta_matches_2012.csv')
View(m.data)
grep("RET",m.data$score)
# grep("[A-Za-z]",score)
m.data <- read.csv('../Data Lake/Matches/atp_matches_2012.csv')
# ret.id <- m.data$tourney_id
retired.match.histograms('../Data Lake/Point-By-Point/2011-wimbledon-matches.csv')
retired.match.histograms('../Data Lake/Point-By-Point/2011-frenchopen-matches.csv')
retired.match.histograms('../Data Lake/Point-By-Point/2011-usopen-matches.csv')
retired.match.histograms('../Data Lake/Point-By-Point/2011-ausopen-matches.csv')
